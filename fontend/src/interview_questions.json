{
  "Artificial Intelligence": [
    "What is the Turing Test, and how is it used to assess AI?",
    "Differentiate between strong AI and weak AI.",
    "What is the PEAS representation in intelligent agents?",
    "Explain the components of an intelligent agent.",
    "Compare knowledge-based agents and reactive agents.",
    "What is utility-based reasoning?",
    "Describe uninformed vs informed search strategies.",
    "What are constraint satisfaction problems?",
    "How is logic used in AI (Propositional, Predicate)?",
    "What is backward vs. forward chaining?",
    "What is Alpha-Beta pruning in game trees?",
    "How is fuzzy logic used in AI decision systems?",
    "Explain belief networks and their use in probabilistic reasoning.",
    "What is the frame problem in AI?",
    "Explain the Minimax algorithm and its use in adversarial games.",
    "What is the difference between parametric and non-parametric models?",
    "Explain supervised vs. unsupervised vs. reinforcement learning.",
    "How do you choose the best ML algorithm for a given problem?",
    "What is overfitting and how can you prevent it?",
    "How does cross-validation work?",
    "What is PCA and when should it be used?",
    "Explain ensemble methods like bagging and boosting.",
    "What are the assumptions of linear regression?",
    "Explain the difference between logistic regression and SVM.",
    "What is a confusion matrix? Interpret each component.",
    "Describe precision, recall, and F1-score.",
    "Explain the working of k-means clustering.",
    "What is the curse of dimensionality?",
    "How is feature selection different from feature extraction?",
    "What’s the difference between generative and discriminative models?",
    "Explain the architecture of a feedforward neural network.",
    "What is a vanishing gradient problem?",
    "Describe how ReLU is better than sigmoid in deep networks.",
    "What are convolutional layers used for?",
    "How does transfer learning work?",
    "Explain the architecture of ResNet and its skip connections.",
    "What is a GAN and how does it work?",
    "Compare CNN, RNN, and Transformer models.",
    "How does batch normalization work?",
    "What is early stopping and why is it useful?",
    "What is the difference between online, batch, and mini-batch learning?",
    "Explain Xavier/He initialization.",
    "What is gradient clipping and when is it used?",
    "How does attention mechanism work in deep models?",
    "What is label smoothing and why is it used?",
    "How do tokenizers work in NLP?",
    "What is stemming vs lemmatization?",
    "Explain TF-IDF. Why is it better than term frequency?",
    "What is POS tagging and how is it done?",
    "How does Word2Vec work (CBOW vs Skip-Gram)?",
    "What is cosine similarity and where is it used in NLP?",
    "What is NER (Named Entity Recognition)?",
    "Explain the structure of a Transformer model.",
    "How does BERT differ from traditional word embeddings?",
    "What is the role of attention in NLP models?",
    "Explain the concept of masking in transformers.",
    "What are encoder-decoder models?",
    "What is sentence embedding?",
    "What is perplexity in language models?",
    "How do you evaluate a text generation model?",
    "How do CNNs process image data?",
    "What are filters/kernels in CNN?",
    "What is stride and padding in convolutional layers?",
    "Explain MaxPooling and its role in CNNs.",
    "What is the difference between classification, detection, and segmentation?",
    "How is YOLO different from R-CNN?",
    "What is IoU (Intersection over Union)?",
    "What are common image augmentations and why are they used?",
    "Explain transfer learning using pretrained models like VGG16.",
    "What is the role of feature maps?",
    "How are bounding boxes predicted in object detection?",
    "What is the vanishing gradient issue in deep CNNs?",
    "What’s the difference between semantic and instance segmentation?",
    "How are autoencoders used in image reconstruction?",
    "What is OpenCV and how is it used in AI vision projects?"
  ],
  "Object Oriented Programming": [
    "What are the four main principles of OOP? Explain each with examples.",
    "Differentiate between class and object. How are they related?",
    "What is encapsulation and why is it important in OOP?",
    "Explain the concept of inheritance. How does it help in code reusability?",
    "What is polymorphism? Give examples of compile-time and run-time polymorphism.",
    "What is abstraction and how is it implemented in OOP languages?",
    "What is method overloading vs. method overriding?",
    "Explain the difference between `this` and `super` keywords.",
    "What is constructor overloading? When is it useful?",
    "What is the difference between an interface and an abstract class?",
    "How is multiple inheritance handled in languages like Java or C++?",
    "What is the role of access modifiers (public, private, protected)?",
    "What is object composition and how is it different from inheritance?",
    "What are static methods and variables? Can static methods access instance variables?",
    "What is the SOLID principle in OOP and why is it important in software design?"
  ],
  "Operating Systems": [
    "What is a process vs. a thread?",
    "How does context switching work?",
    "Explain deadlock. What are the four necessary conditions?",
    "How can deadlocks be prevented or avoided?",
    "What is virtual memory? How is it implemented?",
    "Describe paging and segmentation.",
    "What is a page fault?",
    "Explain different scheduling algorithms (FCFS, SJF, Round Robin).",
    "What are semaphores and mutexes?",
    "How does inter-process communication (IPC) work?",
    "What is the difference between user mode and kernel mode?",
    "How is memory protected between processes?",
    "Explain how OS handles file systems.",
    "What are system calls?",
    "Why is multithreading important in AI workloads?"
  ],
  "Data Structures": [
    "What is the time complexity of inserting into a heap?",
    "Explain how hash tables work and handle collisions.",
    "When would you use a priority queue in AI systems?",
    "How does a binary search tree differ from a B+ tree?",
    "Explain recursion vs. iteration and trade-offs.",
    "What are tries and how are they used in NLP?",
    "Describe a use-case for a graph traversal algorithm in AI.",
    "What is memoization and how does it improve performance?",
    "Explain topological sort and its application.",
    "Describe the working of Dijkstra’s algorithm.",
    "What is the difference between a stack and a queue?",
    "Explain the working of a disjoint-set (union-find).",
    "What is the complexity of quicksort in average/worst case?",
    "How does dynamic programming differ from greedy methods?",
    "What is a segment tree and when is it used?"
  ],
  "Databases": [
    "What is normalization? Explain 1NF, 2NF, and 3NF.",
    "What is indexing and how does it improve performance?",
    "What are ACID properties?",
    "Explain the difference between primary key and foreign key.",
    "What is a transaction? What ensures it's safely executed?",
    "Compare SQL and NoSQL databases.",
    "What is a JOIN? Explain types (INNER, LEFT, OUTER).",
    "When would you use MongoDB over MySQL?",
    "Explain CAP theorem in distributed databases.",
    "What is sharding and replication?",
    "How do you optimize a slow SQL query?",
    "What is an ER diagram?",
    "How is data consistency maintained in distributed DBs?",
    "What are stored procedures and why use them?",
    "How does vector search differ from traditional DB queries (in AI context)?"
  ],
  "Computer Networks": [
    "What is the OSI model? Describe all 7 layers.",
    "How does TCP differ from UDP? Where is each used?",
    "What is a socket?",
    "What is IP addressing and how does routing work?",
    "What is DNS and how does it resolve a domain name?",
    "Explain the 3-way TCP handshake.",
    "What is latency vs. bandwidth?",
    "How does HTTP/HTTPS work?",
    "What is a firewall? How does it protect systems?",
    "What are DNS poisoning and ARP spoofing?",
    "What is load balancing and how does it affect AI apps?",
    "What is SSL/TLS and why is it important?",
    "What is packet sniffing and how is it detected?",
    "What is a CDN and how does it speed up ML model delivery?",
    "How do REST APIs work in networked AI systems?"
  ],
   "General Interview Questions": [
    "Tell me about yourself.",
    "What are your strengths and weaknesses?",
    "Why do you want to work here?",
    "Describe a challenge or conflict you faced and how you dealt with it.",
    "Where do you see yourself in five years?",
    "Why should we hire you?",
    "What is your greatest accomplishment?",
    "Describe a time you showed leadership.",
    "How do you handle pressure or stressful situations?",
    "What are your salary expectations?",
    "Do you prefer working independently or on a team?",
    "What motivates you?",
    "Tell me about a time you made a mistake. How did you handle it?",
    "What do you know about our company?",
    "What are your career goals?",
    "How do you prioritize your work?",
    "Describe your ideal work environment.",
    "What is your work style?",
    "What makes you unique?",
    "How do you deal with difficult teammates?",
    "What’s your favorite project you’ve worked on and why?",
    "What do you do if you disagree with your manager?",
    "How do you stay organized?",
    "What tools do you use to manage projects and tasks?",
    "Tell me about a time you went above and beyond.",
    "How do you handle feedback and criticism?",
    "What do you think are the most important qualities of a successful engineer?",
    "How do you continue learning and growing as a developer?",
    "Describe a project that didn’t go as planned. What did you learn?",
    "How do you debug a complicated issue?",
    "What is your approach to writing clean and maintainable code?",
    "Describe a time when you had to learn a new technology quickly.",
    "How do you ensure code quality and avoid bugs?",
    "How do you estimate project timelines?",
    "Have you ever disagreed with a design or approach? What did you do?",
    "How do you handle vague or incomplete requirements?",
    "Tell me about a time you had to mentor someone.",
    "Describe how you’ve handled production issues in the past.",
    "What do you consider when reviewing someone else's code?",
    "How do you make technical decisions when leading a project?",
    "What trade-offs have you made in past software projects?",
    "Describe your experience with version control systems like Git.",
    "Tell me about your experience with test-driven development.",
    "Have you ever had to refactor legacy code? How did you approach it?",
    "How do you stay current with trends and updates in software engineering?",
    "What are the most important things to consider in system scalability?",
    "Describe a time you had to explain technical concepts to non-technical stakeholders.",
    "What do you do if you're stuck on a problem for a long time?",
    "What’s your approach to writing documentation?",
    "What qualities do you value most in a team member?"
  ],
  "System Design": [
    "How would you design a scalable ML inference service?",
    "What is horizontal vs vertical scaling?",
    "What is a message queue and when should you use one?",
    "How would you implement caching in an AI pipeline?",
    "What is load balancing and how does it work?",
    "How would you store and retrieve embeddings at scale?",
    "Explain microservices vs monolithic architectures.",
    "What is a CDN and how is it used for ML model delivery?",
    "Design a recommendation system backend.",
    "What is the role of database sharding in large AI apps?",
    "How do you monitor performance in a distributed AI system?",
    "What is rate limiting and why is it important?",
    "How would you handle versioning of ML models in production?",
    "What is A/B testing and how is it used for AI models?",
    "Design an AI-powered chatbot system end-to-end."
  ],
  "DevOps": [
    "What is the difference between IaaS, PaaS, and SaaS?",
    "How would you deploy a trained ML model on the cloud?",
    "What is containerization? Why is Docker useful in AI?",
    "How does Kubernetes help in AI deployments?",
    "What is CI/CD and how is it used for ML workflows?",
    "What are the advantages of using cloud GPUs?",
    "How can you monitor a model's performance in production?",
    "What is model drift and how is it detected?",
    "What are ML pipelines and why are they important?",
    "How does serverless computing relate to AI?",
    "How can you ensure data security in cloud-based ML systems?",
    "What is the role of logging in AI system debugging?",
    "How would you manage versions of your training data?",
    "How is auto-scaling handled for AI services?",
    "What are common tools for MLOps (e.g., MLflow, DVC)?"
  ]
}
