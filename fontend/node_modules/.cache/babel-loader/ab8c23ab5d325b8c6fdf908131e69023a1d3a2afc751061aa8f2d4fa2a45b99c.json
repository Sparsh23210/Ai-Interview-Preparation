{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Chaurasiya\\\\OneDrive\\\\Desktop\\\\react\\\\student-ai-preparation\\\\fontend\\\\src\\\\components\\\\Checking.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from \"react\";\n// import axios from \"axios\";\n// import SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\n// import Gauge from \"./Gauge\";\n\n// import VantaBackgroundWrapper from \"../VantaBackgroundWrapper\";\n\n// import Webgazer from \"webgazer\"\n\n// import Navbar from \"./Navbar\";\n// window.webgazer = Webgazer;\n\n// const Checking= () => {\n//   const scrollRef = useRef(null);\n//   const [isanlysis,setIsanlysis]=useState(false);\n// let silenceTimer = null;\n//   const [aiQuestion, setAiQuestion] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [analysis, setAnalysis] = useState(null);\n//   const [questionNumber, setQuestionNumber] = useState(1);\n//   const [questionHistory, setQuestionHistory] = useState([]);\n//   const videoRef = useRef(null);\n//   const [showCamera, setShowCamera] = useState(false);\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n//   const [answer,setAnswer]=useState(\"\");\n//   const [isAnswered,setIsAnswered]=useState(false);\n//   const [startTime, setStartTime] = useState(null);\n// const [endTime, setEndTime] = useState(null);\n// const [wpm, setWpm] = useState(0);\n// const [duration, setDuration] = useState(0);\n// const [fluencyFeedback, setFluencyFeedback] = useState(\"\");\n// const [error,setError]=useState(null);\n//   const {\n//     transcript,\n//     listening,\n//     resetTranscript,\n//     browserSupportsSpeechRecognition,\n//   } = useSpeechRecognition();\n\n//   useEffect(() => {\n//   if (showCamera || aiQuestion) {\n//     scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }\n// }, [showCamera, aiQuestion]);\n\n//   const fetchUniqueQuestion = async () => {\n//     const maxRetries = 5;\n//     for (let i = 0; i < maxRetries; i++) {\n//       const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/questioncheck`);\n//       const newQuestion = response.data.question;\n//       if (!questionHistory.includes(newQuestion)) {\n//         setQuestionHistory((prev) => [...prev, newQuestion]);\n//         return newQuestion;\n\n//       }\n//     }\n//     return \"Unable to generate a unique question. Please try again later.\";\n//   };\n//   const resetSilenceTimer = () => {\n//   if (silenceTimer) clearTimeout(silenceTimer);\n//   silenceTimer = setTimeout(() => {\n//     stopListening();\n//     console.log(\"Auto-stopped due to silence.\");\n//   }, 4000); \n// };\n\n// useEffect(() => {\n//   if (listening) {\n//     resetSilenceTimer();\n//   }\n// }, [transcript]);\n//   const fetchAnswer = async (question) => {\n//     try {\n//       const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/answercheck`, { text: question });\n//       const newAnswer = response.data.answer;\n\n//       return newAnswer;\n//     } catch (error) {\n//       console.error(\"Error fetching AI answer:\", error);\n\n//       return \"Unable to generate answer. Please try again later.\";\n//     }\n//   };\n//  const startEyeTracking = () => {\n//    if (Webgazer && Webgazer.setGazeListener) {\n//      Webgazer.setGazeListener((data,timestamp) => {\n//        if (data) {\n//          console.log(\"Gaze at:\", data.x, data.y);\n//        }\n//      }).begin();\n\n//      Webgazer\n//        .showVideo(false)\n//        .showFaceOverlay(false)\n//        .showFaceFeedbackBox(false);\n//    } else {\n//      console.warn(\"webgazer is not available.\");\n//    }\n//  };\n//  const provideanswer=async()=>{\n//   const result=await fetchAnswer(aiQuestion);\n//   setAnswer(result);\n//   setIsAnswered(true);\n//   console.log(\"ai answer\",result);\n//  }\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError(null);\n//     try {\n\n//       const question = await fetchUniqueQuestion();\n//       setAiQuestion(question);\n//       resetTranscript();\n//       setAnalysis(null);\n//       setShowCamera(true);\n//     startEyeTracking();\n\n//     setIsSubmitted(true);\n//     } catch (error) {\n//        setError(error); \n//       console.error(\"Error sending data to GPT API:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   const startListening = () => {\n//     resetTranscript();\n//      setStartTime(Date.now()); \n//     SpeechRecognition.startListening({ continuous: true });\n//   };\n\n//   const stopListening = () => {\n//     SpeechRecognition.stopListening();\n//     const end = Date.now();\n//     setEndTime(end);\n//     if (startTime) {\n//       const duration = (end - startTime) / 1000;\n//       const words = transcript.trim().split(/\\s+/).filter(Boolean).length;\n//       const calculatedWPM = (words / (duration / 60));\n//       setDuration(duration);\n//       setWpm(calculatedWPM.toFixed(2));\n\n//       let feedback = \"Needs improvement\";\n//       if (calculatedWPM >= 90) feedback = \"Excellent fluency!\";\n//       else if (calculatedWPM >= 80) feedback = \"Very good fluency!\";\n//       else if (calculatedWPM >= 70) feedback = \"Good fluency!\";\n//       else if (calculatedWPM >= 60) feedback = \"Good, but can improve.\";\n//       setFluencyFeedback(feedback);\n//     }\n//   };\n\n//   const analyzeTranscript = async () => {\n//     setIsanlysis(true);\n//     try {\n//       const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/analyze-answer`, { text: transcript });\n//       setAnalysis(response.data);\n//     } catch (error) {\n//       console.error(\"Error analyzing transcript:\", error);\n//     }\n//    setIsanlysis(false);\n//   };\n\n// const stopCameraAndEyeTracking = () => {\n\n//   if (window.webgazer && typeof window.webgazer.end === \"function\") {\n//     try {\n//       const isActive = window.webgazer.isReady();\n\n//       if (isActive) {\n//         window.webgazer.end();\n//         window.webgazer.clearData();\n//         console.log('WebGazer successfully stopped');\n//       }\n//     } catch (e) {\n//       console.warn(\"Error stopping WebGazer:\", e);\n//     }\n//   }\n\n//   if (videoRef.current && videoRef.current.srcObject) {\n//     const tracks = videoRef.current.srcObject.getTracks();\n//     tracks.forEach((track) => {\n//       try {\n//         track.stop();\n//       } catch (e) {\n//         console.warn(\"Error stopping camera track:\", e);\n//       }\n//     });\n//     videoRef.current.srcObject = null;\n//     console.log(\"Camera stopped.\");\n//   }\n\n//   setShowCamera(false);\n// };\n\n//   const handleNextQuestion = async () => {\n//     setLoading(true);\n//    try{\n//       const question = await fetchUniqueQuestion();\n//       setAiQuestion(question);\n//       resetTranscript();\n//       setAnalysis(null);\n//       setQuestionNumber((prev) => prev + 1);\n//       setAnswer(\"\");\n//       setIsAnswered(false);\n//     } catch (error) {\n//       console.error(\"Error generating next question:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   useEffect(() => {\n//   const handleBeforeUnload = () => {\n//     if (window.webgazer && typeof window.webgazer.end === \"function\") {\n//       try {\n//         window.webgazer.end();\n//       } catch (e) {\n\n//         console.warn(\"webgazer.end() cleanup error:\", e);\n//       }\n//     }\n//     setShowCamera(false);\n//   };\n\n//   window.addEventListener(\"beforeunload\", handleBeforeUnload);\n\n//   return () => {\n//     window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n//     if (window.webgazer && typeof window.webgazer.end === \"function\") {\n//       try {\n//         window.webgazer.end();\n//       } catch (e) {\n//         console.warn(\"webgazer.end() cleanup error:\", e);\n//       }\n//     }\n//     setShowCamera(false);\n//   };\n// }, []);\n\n//   useEffect(() => {\n//   if (showCamera) {\n//     const start = async () => {\n//       try {\n//         const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//         if (videoRef.current) {\n//           videoRef.current.srcObject = stream;\n//         }\n//       } catch (err) {\n//         console.error(\"Camera access denied or not available\", err);\n//       }\n//     };\n//     start();\n//   }\n// }, [showCamera]);\n// useEffect(() => {\n//   if (transcript.toLowerCase().includes(\"stop\")) {\n//     stopListening();\n//     console.log(\"Voice command 'stop' detected. Stopping...\");\n//   }\n// }, [transcript]);\n// useEffect(()=>{\n//   if(error){\n//     alert(\"Failed to Generate\");\n//     setError(\"\");\n//   }\n// },[error]);\n// const resetanalysis=()=>{\n//   if (SpeechRecognition && typeof SpeechRecognition.stopListening === \"function\") {\n//     SpeechRecognition.stopListening();\n//   }\n//   setAnalysis(null); \n//   setFluencyFeedback(\"\");\n//   setWpm(0);\n//   setDuration(0);\n//   setIsAnswered(false);\n//   setAnswer(\"\");\n//   setStartTime(null);\n//   setEndTime(null); \n//   resetTranscript();\n\n// }\n\n//   if (!browserSupportsSpeechRecognition) {\n//     return <span>Your browser does not support speech recognition.</span>;\n//   }\n\n//   return (\n//     <>\n\n//      <Navbar/>\n//     <VantaBackgroundWrapper>\n\n//     <div className=\"container\" style={{ marginTop: \"20px\", marginBottom: \"50px\" }}>\n//       <VantaBackgroundWrapper>\n//       <div className=\"card shadow-lg rounded-3\"style={{ marginTop: \"100px\"}}>\n//         <div className=\"card-body\">\n\n//          {isSubmitted && ( showCamera?(<div className=\"mb-4 \">\n//             <h4 className=\"h6 fw-bold\"> Eye Tracking Camera (Live)</h4>\n//             <video ref={videoRef} autoPlay playsInline className=\"w-100 rounded border\" style={{ maxHeight: \"220px\" }} />\n//          <button\n//   className=\"btn btn-danger\"\n//   onClick={stopCameraAndEyeTracking}\n\n// >\n//   Close Camera\n// </button>\n\n//   </div>):( <button\n//   className=\"btn btn-danger\"\n//   onClick={() => { setShowCamera(true); startEyeTracking(); }}>\n//   Open Camera\n// </button>))}\n//      {!isSubmitted&&(<div className=\"d-flex flex-column justify-content-center align-items-center vh-100\">\n//       <h2 className=\"card-title mb-4\">Click Below To Check</h2>\n//   <button onClick={handleSubmit}\n//     className=\"btn btn-primary btn-lg fw-bold px-4 py-2 shadow\"\n//     style={{\n//       transition: \"transform 0.3s ease, background-color 0.3s ease\",\n//     }}\n//     onMouseOver={(e) => (e.target.style.transform = \"scale(1.05)\")}\n//     onMouseOut={(e) => (e.target.style.transform = \"scale(1)\")}\n//   >\n//     {loading ? (\n//         <>\n//           <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n//           Generating...\n//         </>\n//       ) : (\n//         \"Let's Check\"\n//       )}\n//   </button>\n\n// </div>)}\n\n//           {aiQuestion && (\n//             <div className=\"mt-5 p-3 bg-light rounded border\">\n//               <h3 className=\"h4 fw-bold mb-2\"> Question {questionNumber}:</h3>\n//               <h2>{aiQuestion}</h2>\n//               {!isAnswered && (\n//                 <button onClick={provideanswer} className=\"btn btn-secondary mb-3\">\n//                   Check Answer\n//                 </button>\n//               )}\n//               {isAnswered && (\n//                 <div className=\"alert alert-info mt-2\">\n//                   <strong>AI Answer:</strong> {answer}\n//                 </div>\n//               )}\n\n//               <div className=\"mt-3\">\n//                 <h3 className=\"h4 fw-bold\"> Your Answer (Voice Input)</h3>\n//                 <div className=\"text-secondary mb-2\">{transcript || \"Your speech will appear here...\"}</div>\n\n//                 <div className=\"d-flex gap-3 mb-3\">\n//                 <div className=\"d-flex justifyContent-space-between pd-5\" >\n//                   <button type=\"button\" onClick={startListening} className=\"btn btn-success hover-effect\">\n//                     Start Talking\n//                   </button>\n//                   <button type=\"button\" onClick={stopListening} className=\"btn btn-danger\"style={{ marginLeft: '10px' }}>\n//                     Stop\n//                   </button>\n//                   <button type=\"button\" onClick={resetanalysis} className=\"btn btn-secondary\"style={{ marginLeft: '10px' }}>\n//                     Reset\n//                   </button>\n//                 </div>\n//                 <button onClick={analyzeTranscript} className=\"btn btn-primary\">{isanlysis?\"Analyzing\":\"Check Analysis\"}</button>\n//                 </div>\n//               </div>\n\n//               {analysis && (<div>\n//                  <h4 className=\"h6 fw-bold mb-2\"> Answer Analysis</h4>\n//                 <div className=\"d-flex flex-row gap-2\">\n//                   <div className=\"mt-4 p-3 bg-warning bg-opacity-25 rounded\">\n\n//                     <p>Fluency Feedback: {fluencyFeedback}</p>\n\n//                     <div>\n//                       <Gauge value={wpm}/>\n\n//                     </div>\n//                   </div>\n//                    <div className=\"mt-4 p-3 bg-warning bg-opacity-25 rounded\">\n\n//                     <p>Grammar Accuracy: {analysis.grammar}%</p>\n//                     <div>\n\n//                       <Gauge value={analysis.grammar}/>\n//                     </div>\n//                   </div>\n//                 </div></div>\n//               )}\n//               <div className=\"text-end\">\n//                     <button onClick={handleNextQuestion} className=\"btn btn-info mt-2\">\n//                      {loading ? (\n//         <>\n//           <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n//           Generating...\n//         </>\n//       ) : (\n//         \"Next Question\"\n//       )} \n//                     </button>\n//                   </div>\n//             </div>\n\n//           )}\n//         </div>\n//       </div></VantaBackgroundWrapper>\n//     </div> </VantaBackgroundWrapper></>\n//   );\n// };\n\n// export default Checking;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport Gauge from \"./Gauge\";\nimport FormWithParticles from \"../FormWithParticles\";\nimport VantaBackgroundWrapper from \"../VantaBackgroundWrapper\";\nimport Webgazer from \"webgazer\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nwindow.webgazer = Webgazer;\nconst Checking = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    location: \"\",\n    education: \"\",\n    fatherName: \"\",\n    motherName: \"\",\n    siblings: \"\",\n    Hobbies: \"\"\n  });\n  let silenceTimer = null;\n  const [aiQuestion, setAiQuestion] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [questionHistory, setQuestionHistory] = useState([]);\n  const videoRef = useRef(null);\n  const [showCamera, setShowCamera] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [answer, setAnswer] = useState(\"\");\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [wpm, setWpm] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [fluencyFeedback, setFluencyFeedback] = useState(\"\");\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setFormData({\n      ...formData,\n      resume: e.target.files[0]\n    });\n  };\n  const resetSilenceTimer = () => {\n    if (silenceTimer) clearTimeout(silenceTimer);\n    silenceTimer = setTimeout(() => {\n      stopListening();\n      console.log(\"Auto-stopped due to silence.\");\n    }, 4000);\n  };\n  useEffect(() => {\n    if (listening) {\n      resetSilenceTimer();\n    }\n  }, [transcript]);\n  const fetchUniqueQuestion = async data => {\n    const maxRetries = 5;\n    for (let i = 0; i < maxRetries; i++) {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/questioncheck`, data);\n      const newQuestion = response.data.question;\n      if (!questionHistory.includes(newQuestion)) {\n        setQuestionHistory(prev => [...prev, newQuestion]);\n        return newQuestion;\n      }\n    }\n    return \"Unable to generate a unique question. Please try again later.\";\n  };\n  const fetchAnswer = async question => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/answercheck`, {\n        text: question\n      });\n      const newAnswer = response.data.answer;\n      return newAnswer;\n    } catch (error) {\n      console.error(\"Error fetching AI answer:\", error);\n      return \"Unable to generate answer. Please try again later.\";\n    }\n  };\n  const startEyeTracking = () => {\n    if (Webgazer && Webgazer.setGazeListener) {\n      Webgazer.setGazeListener((data, timestamp) => {\n        if (data) {\n          console.log(\"Gaze at:\", data.x, data.y);\n        }\n      }).begin();\n      Webgazer.showVideo(false).showFaceOverlay(false).showFaceFeedbackBox(false);\n    } else {\n      console.warn(\"webgazer is not available.\");\n    }\n  };\n  const provideanswer = async () => {\n    const result = await fetchAnswer(aiQuestion);\n    setAnswer(result);\n    setIsAnswered(true);\n    console.log(\"ai answer\", result);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const formDataToSend = new FormData();\n      Object.entries(formData).forEach(([key, value]) => {\n        if (key === \"resume\" && value === null) {\n          return;\n        }\n        formDataToSend.append(key, value);\n      });\n      const question = await fetchUniqueQuestion(formDataToSend);\n      setAiQuestion(question);\n      resetTranscript();\n      setAnalysis(null);\n      setShowCamera(true);\n      startEyeTracking();\n      setIsSubmitted(true);\n    } catch (error) {\n      console.error(\"Error sending data to GPT API:\", error);\n    }\n    setLoading(false);\n  };\n  const startListening = () => {\n    resetTranscript();\n    setStartTime(Date.now());\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n  const stopListening = () => {\n    SpeechRecognition.stopListening();\n    const end = Date.now();\n    setEndTime(end);\n    if (startTime) {\n      const duration = (end - startTime) / 1000;\n      const words = transcript.trim().split(/\\s+/).filter(Boolean).length;\n      const calculatedWPM = words / (duration / 60);\n      setDuration(duration);\n      setWpm(calculatedWPM.toFixed(2));\n      let feedback = \"Needs improvement\";\n      if (calculatedWPM >= 90) feedback = \"Excellent fluency!\";else if (calculatedWPM >= 80) feedback = \"Very good fluency!\";else if (calculatedWPM >= 70) feedback = \"Good fluency!\";else if (calculatedWPM >= 60) feedback = \"Good, but can improve.\";\n      setFluencyFeedback(feedback);\n    }\n  };\n  const analyzeTranscript = async () => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/analyze-answer`, {\n        text: transcript\n      });\n      setAnalysis(response.data);\n    } catch (error) {\n      console.error(\"Error analyzing transcript:\", error);\n    }\n  };\n  const stopCameraAndEyeTracking = () => {\n    if (window.webgazer && typeof window.webgazer.end === \"function\") {\n      try {\n        window.webgazer.end();\n        window.webgazer.clearData();\n        console.log(\"WebGazer stopped.\");\n      } catch (e) {\n        console.warn(\"Error stopping WebGazer:\", e);\n      }\n    }\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => {\n        try {\n          track.stop();\n        } catch (e) {\n          console.warn(\"Error stopping camera track:\", e);\n        }\n      });\n      videoRef.current.srcObject = null;\n      console.log(\"Camera stopped.\");\n    }\n    try {\n      if (videoRef.current) {\n        videoRef.current.pause();\n        videoRef.current.removeAttribute('src');\n        videoRef.current.load();\n      }\n    } catch (e) {\n      console.error(\"Error cleaning up video element:\", e);\n    }\n    setShowCamera(false);\n  };\n  const handleNextQuestion = async () => {\n    setLoading(true);\n    try {\n      const formDataToSend = new FormData();\n      Object.entries(formData).forEach(([key, value]) => {\n        formDataToSend.append(key, value);\n      });\n      const question = await fetchUniqueQuestion(formDataToSend);\n      setAiQuestion(question);\n      resetTranscript();\n      setAnalysis(null);\n      setQuestionNumber(prev => prev + 1);\n      setAnswer(\"\");\n      setIsAnswered(false);\n    } catch (error) {\n      console.error(\"Error generating next question:\", error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      if (window.webgazer && typeof window.webgazer.end === \"function\") {\n        try {\n          window.webgazer.end();\n        } catch (e) {\n          console.warn(\"webgazer.end() cleanup error:\", e);\n        }\n      }\n      setShowCamera(false);\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n      if (window.webgazer && typeof window.webgazer.end === \"function\") {\n        try {\n          window.webgazer.end();\n        } catch (e) {\n          console.warn(\"webgazer.end() cleanup error:\", e);\n        }\n      }\n      setShowCamera(false);\n    };\n  }, []);\n  useEffect(() => {\n    if (showCamera) {\n      const start = async () => {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        } catch (err) {\n          console.error(\"Camera access denied or not available\", err);\n        }\n      };\n      start();\n    }\n  }, [showCamera]);\n  useEffect(() => {\n    if (transcript.toLowerCase().includes(\"stop\")) {\n      stopListening();\n      console.log(\"Voice command 'stop' detected. Stopping...\");\n    }\n  }, [transcript]);\n  const resetanalysis = () => {\n    if (SpeechRecognition && typeof SpeechRecognition.stopListening === \"function\") {\n      SpeechRecognition.stopListening();\n    }\n    setAnalysis(null);\n    setFluencyFeedback(\"\");\n    setWpm(0);\n    setDuration(0);\n    setIsAnswered(false);\n    setAnswer(\"\");\n    setStartTime(null);\n    setEndTime(null);\n    resetTranscript();\n  };\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(VantaBackgroundWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        style: {\n          marginTop: \"20px\",\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(VantaBackgroundWrapper, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card shadow-lg rounded-3 \",\n            style: {\n              marginTop: \"50px\",\n              marginBottom: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [isSubmitted && (showCamera ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 \",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"h6 fw-bold\",\n                  children: \" Eye Tracking Camera (Live)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: videoRef,\n                  autoPlay: true,\n                  playsInline: true,\n                  className: \"w-100 rounded border\",\n                  style: {\n                    maxHeight: \"220px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: stopCameraAndEyeTracking,\n                  children: \"Close Camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => {\n                  setShowCamera(true);\n                  startEyeTracking();\n                },\n                children: \"Open Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 13\n              }, this)), !isSubmitted && /*#__PURE__*/_jsxDEV(FormWithParticles, {\n                handleChange: handleChange,\n                handleSubmit: handleSubmit,\n                handleFileChange: handleFileChange,\n                loading: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 22\n              }, this), aiQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-5 p-3 bg-light rounded border\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"h4 fw-bold mb-2\",\n                  children: [\" Question \", questionNumber, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: aiQuestion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 15\n                }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: provideanswer,\n                  className: \"btn btn-secondary mb-3\",\n                  children: \"Check Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 17\n                }, this), isAnswered && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-info mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"AI Answer:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 19\n                  }, this), \" \", answer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"h4 fw-bold\",\n                    children: \" Your Answer (Voice Input)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-secondary mb-2\",\n                    children: transcript || \"Your speech will appear here...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex gap-3 mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"d-flex  justifyContent-space-between \",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: startListening,\n                        className: \"btn btn-success hover-effect\",\n                        children: \"Start Talking\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: stopListening,\n                        className: \"btn btn-danger\",\n                        style: {\n                          marginLeft: '10px'\n                        },\n                        children: \"Stop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 817,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: resetanalysis,\n                        className: \"btn btn-secondary\",\n                        style: {\n                          marginLeft: '10px'\n                        },\n                        children: \"Reset\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 19\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 813,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: analyzeTranscript,\n                      className: \"btn btn-primary\",\n                      children: \"Check Analyasis\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 824,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 15\n                }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"h6 fw-bold mb-2\",\n                    children: \"Answer Analysis\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 829,\n                    columnNumber: 18\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-row gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-4 p-3 bg-warning bg-opacity-25 rounded\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Fluency Feedback: \", fluencyFeedback]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 833,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(Gauge, {\n                          value: wpm\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 836,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 835,\n                        columnNumber: 21\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 831,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mt-4 p-3 bg-warning bg-opacity-25 rounded\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Grammar Accuracy: \", analysis.grammar, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 843,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(Gauge, {\n                          value: analysis.grammar\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 846,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 844,\n                        columnNumber: 21\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 20\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 828,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-end\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleNextQuestion,\n                    className: \"btn btn-info mt-2\",\n                    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"spinner-border spinner-border-sm me-2\",\n                        role: \"status\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 855,\n                        columnNumber: 11\n                      }, this), \"Generating...\"]\n                    }, void 0, true) : \"Next Question\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Checking, \"pM6J9Q706UZ0X1GoXSjX501Zn9U=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Checking;\nexport default Checking;\nvar _c;\n$RefreshReg$(_c, \"Checking\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","SpeechRecognition","useSpeechRecognition","Gauge","FormWithParticles","VantaBackgroundWrapper","Webgazer","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","window","webgazer","Checking","_s","formData","setFormData","name","location","education","fatherName","motherName","siblings","Hobbies","silenceTimer","aiQuestion","setAiQuestion","loading","setLoading","analysis","setAnalysis","questionNumber","setQuestionNumber","questionHistory","setQuestionHistory","videoRef","showCamera","setShowCamera","isSubmitted","setIsSubmitted","answer","setAnswer","isAnswered","setIsAnswered","startTime","setStartTime","endTime","setEndTime","wpm","setWpm","duration","setDuration","fluencyFeedback","setFluencyFeedback","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","handleChange","e","value","target","handleFileChange","resume","files","resetSilenceTimer","clearTimeout","setTimeout","stopListening","console","log","fetchUniqueQuestion","data","maxRetries","i","response","post","process","env","REACT_APP_BACKEND_URL","newQuestion","question","includes","prev","fetchAnswer","text","newAnswer","error","startEyeTracking","setGazeListener","timestamp","x","y","begin","showVideo","showFaceOverlay","showFaceFeedbackBox","warn","provideanswer","result","handleSubmit","preventDefault","formDataToSend","FormData","Object","entries","forEach","key","append","startListening","Date","now","continuous","end","words","trim","split","filter","Boolean","length","calculatedWPM","toFixed","feedback","analyzeTranscript","stopCameraAndEyeTracking","clearData","current","srcObject","tracks","getTracks","track","stop","pause","removeAttribute","load","handleNextQuestion","handleBeforeUnload","addEventListener","removeEventListener","start","stream","navigator","mediaDevices","getUserMedia","video","err","toLowerCase","resetanalysis","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginTop","marginBottom","ref","autoPlay","playsInline","maxHeight","onClick","type","marginLeft","grammar","role","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Chaurasiya/OneDrive/Desktop/react/student-ai-preparation/fontend/src/components/Checking.js"],"sourcesContent":["\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n// import axios from \"axios\";\r\n// import SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\n// import Gauge from \"./Gauge\";\r\n\r\n// import VantaBackgroundWrapper from \"../VantaBackgroundWrapper\";\r\n\r\n// import Webgazer from \"webgazer\"\r\n\r\n// import Navbar from \"./Navbar\";\r\n// window.webgazer = Webgazer;\r\n\r\n\r\n\r\n// const Checking= () => {\r\n//   const scrollRef = useRef(null);\r\n//   const [isanlysis,setIsanlysis]=useState(false);\r\n// let silenceTimer = null;\r\n//   const [aiQuestion, setAiQuestion] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [analysis, setAnalysis] = useState(null);\r\n//   const [questionNumber, setQuestionNumber] = useState(1);\r\n//   const [questionHistory, setQuestionHistory] = useState([]);\r\n//   const videoRef = useRef(null);\r\n//   const [showCamera, setShowCamera] = useState(false);\r\n//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n//   const [answer,setAnswer]=useState(\"\");\r\n//   const [isAnswered,setIsAnswered]=useState(false);\r\n//   const [startTime, setStartTime] = useState(null);\r\n// const [endTime, setEndTime] = useState(null);\r\n// const [wpm, setWpm] = useState(0);\r\n// const [duration, setDuration] = useState(0);\r\n// const [fluencyFeedback, setFluencyFeedback] = useState(\"\");\r\n// const [error,setError]=useState(null);\r\n//   const {\r\n//     transcript,\r\n//     listening,\r\n//     resetTranscript,\r\n//     browserSupportsSpeechRecognition,\r\n//   } = useSpeechRecognition();\r\n\r\n  \r\n\r\n  \r\n//   useEffect(() => {\r\n//   if (showCamera || aiQuestion) {\r\n//     scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }\r\n// }, [showCamera, aiQuestion]);\r\n\r\n\r\n//   const fetchUniqueQuestion = async () => {\r\n//     const maxRetries = 5;\r\n//     for (let i = 0; i < maxRetries; i++) {\r\n//       const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/api/questioncheck`);\r\n//       const newQuestion = response.data.question;\r\n//       if (!questionHistory.includes(newQuestion)) {\r\n//         setQuestionHistory((prev) => [...prev, newQuestion]);\r\n//         return newQuestion;\r\n        \r\n\r\n//       }\r\n//     }\r\n//     return \"Unable to generate a unique question. Please try again later.\";\r\n//   };\r\n//   const resetSilenceTimer = () => {\r\n//   if (silenceTimer) clearTimeout(silenceTimer);\r\n//   silenceTimer = setTimeout(() => {\r\n//     stopListening();\r\n//     console.log(\"Auto-stopped due to silence.\");\r\n//   }, 4000); \r\n// };\r\n\r\n// useEffect(() => {\r\n//   if (listening) {\r\n//     resetSilenceTimer();\r\n//   }\r\n// }, [transcript]);\r\n//   const fetchAnswer = async (question) => {\r\n//     try {\r\n//       const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/answercheck`, { text: question });\r\n//       const newAnswer = response.data.answer;\r\n      \r\n//       return newAnswer;\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching AI answer:\", error);\r\n      \r\n//       return \"Unable to generate answer. Please try again later.\";\r\n//     }\r\n//   };\r\n//  const startEyeTracking = () => {\r\n//    if (Webgazer && Webgazer.setGazeListener) {\r\n//      Webgazer.setGazeListener((data,timestamp) => {\r\n//        if (data) {\r\n//          console.log(\"Gaze at:\", data.x, data.y);\r\n//        }\r\n//      }).begin();\r\n\r\n//      Webgazer\r\n//        .showVideo(false)\r\n//        .showFaceOverlay(false)\r\n//        .showFaceFeedbackBox(false);\r\n//    } else {\r\n//      console.warn(\"webgazer is not available.\");\r\n//    }\r\n//  };\r\n//  const provideanswer=async()=>{\r\n//   const result=await fetchAnswer(aiQuestion);\r\n//   setAnswer(result);\r\n//   setIsAnswered(true);\r\n//   console.log(\"ai answer\",result);\r\n//  }\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(null);\r\n//     try {\r\n      \r\n//       const question = await fetchUniqueQuestion();\r\n//       setAiQuestion(question);\r\n//       resetTranscript();\r\n//       setAnalysis(null);\r\n//       setShowCamera(true);\r\n//     startEyeTracking();\r\n    \r\n//     setIsSubmitted(true);\r\n//     } catch (error) {\r\n//        setError(error); \r\n//       console.error(\"Error sending data to GPT API:\", error);\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   const startListening = () => {\r\n//     resetTranscript();\r\n//      setStartTime(Date.now()); \r\n//     SpeechRecognition.startListening({ continuous: true });\r\n//   };\r\n\r\n//   const stopListening = () => {\r\n//     SpeechRecognition.stopListening();\r\n//     const end = Date.now();\r\n//     setEndTime(end);\r\n//     if (startTime) {\r\n//       const duration = (end - startTime) / 1000;\r\n//       const words = transcript.trim().split(/\\s+/).filter(Boolean).length;\r\n//       const calculatedWPM = (words / (duration / 60));\r\n//       setDuration(duration);\r\n//       setWpm(calculatedWPM.toFixed(2));\r\n\r\n//       let feedback = \"Needs improvement\";\r\n//       if (calculatedWPM >= 90) feedback = \"Excellent fluency!\";\r\n//       else if (calculatedWPM >= 80) feedback = \"Very good fluency!\";\r\n//       else if (calculatedWPM >= 70) feedback = \"Good fluency!\";\r\n//       else if (calculatedWPM >= 60) feedback = \"Good, but can improve.\";\r\n//       setFluencyFeedback(feedback);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const analyzeTranscript = async () => {\r\n//     setIsanlysis(true);\r\n//     try {\r\n//       const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/analyze-answer`, { text: transcript });\r\n//       setAnalysis(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error analyzing transcript:\", error);\r\n//     }\r\n//    setIsanlysis(false);\r\n//   };\r\n\r\n  \r\n// const stopCameraAndEyeTracking = () => {\r\n  \r\n//   if (window.webgazer && typeof window.webgazer.end === \"function\") {\r\n//     try {\r\n//       const isActive = window.webgazer.isReady();\r\n      \r\n      \r\n//       if (isActive) {\r\n//         window.webgazer.end();\r\n//         window.webgazer.clearData();\r\n//         console.log('WebGazer successfully stopped');\r\n//       }\r\n//     } catch (e) {\r\n//       console.warn(\"Error stopping WebGazer:\", e);\r\n//     }\r\n//   }\r\n\r\n  \r\n//   if (videoRef.current && videoRef.current.srcObject) {\r\n//     const tracks = videoRef.current.srcObject.getTracks();\r\n//     tracks.forEach((track) => {\r\n//       try {\r\n//         track.stop();\r\n//       } catch (e) {\r\n//         console.warn(\"Error stopping camera track:\", e);\r\n//       }\r\n//     });\r\n//     videoRef.current.srcObject = null;\r\n//     console.log(\"Camera stopped.\");\r\n//   }\r\n\r\n \r\n//   setShowCamera(false);\r\n// };\r\n\r\n//   const handleNextQuestion = async () => {\r\n//     setLoading(true);\r\n//    try{\r\n//       const question = await fetchUniqueQuestion();\r\n//       setAiQuestion(question);\r\n//       resetTranscript();\r\n//       setAnalysis(null);\r\n//       setQuestionNumber((prev) => prev + 1);\r\n//       setAnswer(\"\");\r\n//       setIsAnswered(false);\r\n//     } catch (error) {\r\n//       console.error(\"Error generating next question:\", error);\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n  \r\n//   useEffect(() => {\r\n//   const handleBeforeUnload = () => {\r\n//     if (window.webgazer && typeof window.webgazer.end === \"function\") {\r\n//       try {\r\n//         window.webgazer.end();\r\n//       } catch (e) {\r\n        \r\n//         console.warn(\"webgazer.end() cleanup error:\", e);\r\n//       }\r\n//     }\r\n//     setShowCamera(false);\r\n//   };\r\n\r\n//   window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n//   return () => {\r\n//     window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n//     if (window.webgazer && typeof window.webgazer.end === \"function\") {\r\n//       try {\r\n//         window.webgazer.end();\r\n//       } catch (e) {\r\n//         console.warn(\"webgazer.end() cleanup error:\", e);\r\n//       }\r\n//     }\r\n//     setShowCamera(false);\r\n//   };\r\n// }, []);\r\n\r\n//   useEffect(() => {\r\n//   if (showCamera) {\r\n//     const start = async () => {\r\n//       try {\r\n//         const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n//         if (videoRef.current) {\r\n//           videoRef.current.srcObject = stream;\r\n//         }\r\n//       } catch (err) {\r\n//         console.error(\"Camera access denied or not available\", err);\r\n//       }\r\n//     };\r\n//     start();\r\n//   }\r\n// }, [showCamera]);\r\n// useEffect(() => {\r\n//   if (transcript.toLowerCase().includes(\"stop\")) {\r\n//     stopListening();\r\n//     console.log(\"Voice command 'stop' detected. Stopping...\");\r\n//   }\r\n// }, [transcript]);\r\n// useEffect(()=>{\r\n//   if(error){\r\n//     alert(\"Failed to Generate\");\r\n//     setError(\"\");\r\n//   }\r\n// },[error]);\r\n// const resetanalysis=()=>{\r\n//   if (SpeechRecognition && typeof SpeechRecognition.stopListening === \"function\") {\r\n//     SpeechRecognition.stopListening();\r\n//   }\r\n//   setAnalysis(null); \r\n//   setFluencyFeedback(\"\");\r\n//   setWpm(0);\r\n//   setDuration(0);\r\n//   setIsAnswered(false);\r\n//   setAnswer(\"\");\r\n//   setStartTime(null);\r\n//   setEndTime(null); \r\n//   resetTranscript();\r\n\r\n\r\n \r\n// }\r\n\r\n  \r\n//   if (!browserSupportsSpeechRecognition) {\r\n//     return <span>Your browser does not support speech recognition.</span>;\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n    \r\n//      <Navbar/>\r\n//     <VantaBackgroundWrapper>\r\n    \r\n//     <div className=\"container\" style={{ marginTop: \"20px\", marginBottom: \"50px\" }}>\r\n//       <VantaBackgroundWrapper>\r\n//       <div className=\"card shadow-lg rounded-3\"style={{ marginTop: \"100px\"}}>\r\n//         <div className=\"card-body\">\r\n          \r\n\r\n          \r\n\r\n         \r\n//          {isSubmitted && ( showCamera?(<div className=\"mb-4 \">\r\n//             <h4 className=\"h6 fw-bold\"> Eye Tracking Camera (Live)</h4>\r\n//             <video ref={videoRef} autoPlay playsInline className=\"w-100 rounded border\" style={{ maxHeight: \"220px\" }} />\r\n//          <button\r\n//   className=\"btn btn-danger\"\r\n//   onClick={stopCameraAndEyeTracking}\r\n    \r\n    \r\n// >\r\n//   Close Camera\r\n// </button>\r\n\r\n//   </div>):( <button\r\n//   className=\"btn btn-danger\"\r\n//   onClick={() => { setShowCamera(true); startEyeTracking(); }}>\r\n//   Open Camera\r\n// </button>))}\r\n//      {!isSubmitted&&(<div className=\"d-flex flex-column justify-content-center align-items-center vh-100\">\r\n//       <h2 className=\"card-title mb-4\">Click Below To Check</h2>\r\n//   <button onClick={handleSubmit}\r\n//     className=\"btn btn-primary btn-lg fw-bold px-4 py-2 shadow\"\r\n//     style={{\r\n//       transition: \"transform 0.3s ease, background-color 0.3s ease\",\r\n//     }}\r\n//     onMouseOver={(e) => (e.target.style.transform = \"scale(1.05)\")}\r\n//     onMouseOut={(e) => (e.target.style.transform = \"scale(1)\")}\r\n//   >\r\n//     {loading ? (\r\n//         <>\r\n//           <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n//           Generating...\r\n//         </>\r\n//       ) : (\r\n//         \"Let's Check\"\r\n//       )}\r\n//   </button>\r\n  \r\n// </div>)}\r\n\r\n//           {aiQuestion && (\r\n//             <div className=\"mt-5 p-3 bg-light rounded border\">\r\n//               <h3 className=\"h4 fw-bold mb-2\"> Question {questionNumber}:</h3>\r\n//               <h2>{aiQuestion}</h2>\r\n//               {!isAnswered && (\r\n//                 <button onClick={provideanswer} className=\"btn btn-secondary mb-3\">\r\n//                   Check Answer\r\n//                 </button>\r\n//               )}\r\n//               {isAnswered && (\r\n//                 <div className=\"alert alert-info mt-2\">\r\n//                   <strong>AI Answer:</strong> {answer}\r\n//                 </div>\r\n//               )}\r\n\r\n//               <div className=\"mt-3\">\r\n//                 <h3 className=\"h4 fw-bold\"> Your Answer (Voice Input)</h3>\r\n//                 <div className=\"text-secondary mb-2\">{transcript || \"Your speech will appear here...\"}</div>\r\n\r\n//                 <div className=\"d-flex gap-3 mb-3\">\r\n//                 <div className=\"d-flex justifyContent-space-between pd-5\" >\r\n//                   <button type=\"button\" onClick={startListening} className=\"btn btn-success hover-effect\">\r\n//                     Start Talking\r\n//                   </button>\r\n//                   <button type=\"button\" onClick={stopListening} className=\"btn btn-danger\"style={{ marginLeft: '10px' }}>\r\n//                     Stop\r\n//                   </button>\r\n//                   <button type=\"button\" onClick={resetanalysis} className=\"btn btn-secondary\"style={{ marginLeft: '10px' }}>\r\n//                     Reset\r\n//                   </button>\r\n//                 </div>\r\n//                 <button onClick={analyzeTranscript} className=\"btn btn-primary\">{isanlysis?\"Analyzing\":\"Check Analysis\"}</button>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               {analysis && (<div>\r\n//                  <h4 className=\"h6 fw-bold mb-2\"> Answer Analysis</h4>\r\n//                 <div className=\"d-flex flex-row gap-2\">\r\n//                   <div className=\"mt-4 p-3 bg-warning bg-opacity-25 rounded\">\r\n                   \r\n//                     <p>Fluency Feedback: {fluencyFeedback}</p>\r\n                    \r\n//                     <div>\r\n//                       <Gauge value={wpm}/>\r\n                      \r\n//                     </div>\r\n//                   </div>\r\n//                    <div className=\"mt-4 p-3 bg-warning bg-opacity-25 rounded\">\r\n                   \r\n                    \r\n//                     <p>Grammar Accuracy: {analysis.grammar}%</p>\r\n//                     <div>\r\n                      \r\n//                       <Gauge value={analysis.grammar}/>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div></div>\r\n//               )}\r\n//               <div className=\"text-end\">\r\n//                     <button onClick={handleNextQuestion} className=\"btn btn-info mt-2\">\r\n//                      {loading ? (\r\n//         <>\r\n//           <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n//           Generating...\r\n//         </>\r\n//       ) : (\r\n//         \"Next Question\"\r\n//       )} \r\n//                     </button>\r\n//                   </div>\r\n//             </div>\r\n            \r\n//           )}\r\n//         </div>\r\n//       </div></VantaBackgroundWrapper>\r\n//     </div> </VantaBackgroundWrapper></>\r\n//   );\r\n// };\r\n\r\n// export default Checking;\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\nimport Gauge from \"./Gauge\";\r\nimport FormWithParticles  from \"../FormWithParticles\";\r\nimport VantaBackgroundWrapper from \"../VantaBackgroundWrapper\";\r\n\r\nimport Webgazer from \"webgazer\"\r\n\r\nimport Navbar from \"./Navbar\";\r\nwindow.webgazer = Webgazer;\r\n\r\n\r\n\r\nconst Checking= () => {\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    education: \"\",\r\n    fatherName: \"\",\r\n    motherName: \"\",\r\n    siblings: \"\",\r\n    Hobbies: \"\",\r\n    \r\n  });\r\nlet silenceTimer = null;\r\n  const [aiQuestion, setAiQuestion] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [questionNumber, setQuestionNumber] = useState(1);\r\n  const [questionHistory, setQuestionHistory] = useState([]);\r\n  const videoRef = useRef(null);\r\n  const [showCamera, setShowCamera] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [answer,setAnswer]=useState(\"\");\r\n  const [isAnswered,setIsAnswered]=useState(false);\r\n  const [startTime, setStartTime] = useState(null);\r\nconst [endTime, setEndTime] = useState(null);\r\nconst [wpm, setWpm] = useState(0);\r\nconst [duration, setDuration] = useState(0);\r\nconst [fluencyFeedback, setFluencyFeedback] = useState(\"\");\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData({ ...formData, resume: e.target.files[0] });\r\n  };\r\n  \r\nconst resetSilenceTimer = () => {\r\n  if (silenceTimer) clearTimeout(silenceTimer);\r\n  silenceTimer = setTimeout(() => {\r\n    stopListening();\r\n    console.log(\"Auto-stopped due to silence.\");\r\n  }, 4000); \r\n};\r\n\r\nuseEffect(() => {\r\n  if (listening) {\r\n    resetSilenceTimer();\r\n  }\r\n}, [transcript]);\r\n  const fetchUniqueQuestion = async (data) => {\r\n    const maxRetries = 5;\r\n    for (let i = 0; i < maxRetries; i++) {\r\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/questioncheck`, data);\r\n      const newQuestion = response.data.question;\r\n      if (!questionHistory.includes(newQuestion)) {\r\n        setQuestionHistory((prev) => [...prev, newQuestion]);\r\n        return newQuestion;\r\n      }\r\n    }\r\n    return \"Unable to generate a unique question. Please try again later.\";\r\n  };\r\n  const fetchAnswer = async (question) => {\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/answercheck`, { text: question });\r\n      const newAnswer = response.data.answer;\r\n      \r\n      return newAnswer;\r\n    } catch (error) {\r\n      console.error(\"Error fetching AI answer:\", error);\r\n      \r\n      return \"Unable to generate answer. Please try again later.\";\r\n    }\r\n  };\r\n const startEyeTracking = () => {\r\n   if (Webgazer && Webgazer.setGazeListener) {\r\n     Webgazer.setGazeListener((data,timestamp) => {\r\n       if (data) {\r\n         console.log(\"Gaze at:\", data.x, data.y);\r\n       }\r\n     }).begin();\r\n\r\n     Webgazer\r\n       .showVideo(false)\r\n       .showFaceOverlay(false)\r\n       .showFaceFeedbackBox(false);\r\n   } else {\r\n     console.warn(\"webgazer is not available.\");\r\n   }\r\n };\r\n const provideanswer=async()=>{\r\n  const result=await fetchAnswer(aiQuestion);\r\n  setAnswer(result);\r\n  setIsAnswered(true);\r\n  console.log(\"ai answer\",result);\r\n }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const formDataToSend = new FormData();\r\n      Object.entries(formData).forEach(([key, value]) => {\r\n        if (key === \"resume\" && value === null) {\r\n          \r\n          return;\r\n        }\r\n        formDataToSend.append(key, value);\r\n      });\r\n      const question = await fetchUniqueQuestion(formDataToSend);\r\n      setAiQuestion(question);\r\n      resetTranscript();\r\n      setAnalysis(null);\r\n      setShowCamera(true);\r\n    startEyeTracking();\r\n    \r\n    setIsSubmitted(true);\r\n    } catch (error) {\r\n      console.error(\"Error sending data to GPT API:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const startListening = () => {\r\n    resetTranscript();\r\n     setStartTime(Date.now()); \r\n    SpeechRecognition.startListening({ continuous: true });\r\n  };\r\n\r\n  const stopListening = () => {\r\n    SpeechRecognition.stopListening();\r\n    const end = Date.now();\r\n    setEndTime(end);\r\n    if (startTime) {\r\n      const duration = (end - startTime) / 1000;\r\n      const words = transcript.trim().split(/\\s+/).filter(Boolean).length;\r\n      const calculatedWPM = (words / (duration / 60));\r\n      setDuration(duration);\r\n      setWpm(calculatedWPM.toFixed(2));\r\n\r\n      let feedback = \"Needs improvement\";\r\n      if (calculatedWPM >= 90) feedback = \"Excellent fluency!\";\r\n      else if (calculatedWPM >= 80) feedback = \"Very good fluency!\";\r\n      else if (calculatedWPM >= 70) feedback = \"Good fluency!\";\r\n      else if (calculatedWPM >= 60) feedback = \"Good, but can improve.\";\r\n      setFluencyFeedback(feedback);\r\n    }\r\n  };\r\n  \r\n\r\n  const analyzeTranscript = async () => {\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/analyze-answer`, { text: transcript });\r\n      setAnalysis(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error analyzing transcript:\", error);\r\n    }\r\n  };\r\n\r\n  \r\nconst stopCameraAndEyeTracking = () => {\r\n  \r\n  if (window.webgazer && typeof window.webgazer.end === \"function\") {\r\n    try {\r\n      window.webgazer.end();\r\n      window.webgazer.clearData();\r\n      console.log(\"WebGazer stopped.\");\r\n    } catch (e) {\r\n      console.warn(\"Error stopping WebGazer:\", e);\r\n    }\r\n  }\r\n\r\n  \r\n  if (videoRef.current && videoRef.current.srcObject) {\r\n    const tracks = videoRef.current.srcObject.getTracks();\r\n    tracks.forEach((track) => {\r\n      try {\r\n        track.stop();\r\n      } catch (e) {\r\n        console.warn(\"Error stopping camera track:\", e);\r\n      }\r\n    });\r\n    videoRef.current.srcObject = null;\r\n    console.log(\"Camera stopped.\");\r\n  }\r\n\r\n  try {\r\n      if (videoRef.current) {\r\n        videoRef.current.pause();\r\n        videoRef.current.removeAttribute('src');\r\n        videoRef.current.load();\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error cleaning up video element:\", e);\r\n    }\r\n  \r\n  setShowCamera(false);\r\n};\r\n\r\n  const handleNextQuestion = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const formDataToSend = new FormData();\r\n      Object.entries(formData).forEach(([key, value]) => {\r\n        formDataToSend.append(key, value);\r\n      });\r\n      const question = await fetchUniqueQuestion(formDataToSend);\r\n      setAiQuestion(question);\r\n      resetTranscript();\r\n      setAnalysis(null);\r\n      setQuestionNumber((prev) => prev + 1);\r\n      setAnswer(\"\");\r\n      setIsAnswered(false);\r\n    } catch (error) {\r\n      console.error(\"Error generating next question:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n  const handleBeforeUnload = () => {\r\n    if (window.webgazer && typeof window.webgazer.end === \"function\") {\r\n      try {\r\n        window.webgazer.end();\r\n      } catch (e) {\r\n        \r\n        console.warn(\"webgazer.end() cleanup error:\", e);\r\n      }\r\n    }\r\n    setShowCamera(false);\r\n  };\r\n\r\n  window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n  return () => {\r\n    window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    if (window.webgazer && typeof window.webgazer.end === \"function\") {\r\n      try {\r\n        window.webgazer.end();\r\n      } catch (e) {\r\n        console.warn(\"webgazer.end() cleanup error:\", e);\r\n      }\r\n    }\r\n    setShowCamera(false);\r\n  };\r\n}, []);\r\n\r\n  useEffect(() => {\r\n  if (showCamera) {\r\n    const start = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Camera access denied or not available\", err);\r\n      }\r\n    };\r\n    start();\r\n  }\r\n}, [showCamera]);\r\nuseEffect(() => {\r\n  if (transcript.toLowerCase().includes(\"stop\")) {\r\n    stopListening();\r\n    console.log(\"Voice command 'stop' detected. Stopping...\");\r\n  }\r\n}, [transcript]);\r\n\r\nconst resetanalysis=()=>{\r\n  if (SpeechRecognition && typeof SpeechRecognition.stopListening === \"function\") {\r\n    SpeechRecognition.stopListening();\r\n  }\r\n  setAnalysis(null);\r\n  setFluencyFeedback(\"\");\r\n  setWpm(0);\r\n  setDuration(0);\r\n  setIsAnswered(false);\r\n  setAnswer(\"\");\r\n  setStartTime(null);\r\n  setEndTime(null); \r\n  resetTranscript();\r\n\r\n\r\n \r\n}\r\n\r\n  \r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Your browser does not support speech recognition.</span>;\r\n  }\r\n\r\n  return (\r\n    \r\n    <>\r\n    <Navbar/>\r\n    <VantaBackgroundWrapper> \r\n     \r\n    <div className=\"container py-5\" style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\r\n     <VantaBackgroundWrapper> \r\n      <div className=\"card shadow-lg rounded-3 \"style={{ marginTop: \"50px\", marginBottom: \"20px\" }}>\r\n        <div className=\"card-body\">\r\n          \r\n\r\n          \r\n\r\n         \r\n         {isSubmitted && ( showCamera?(<div className=\"mb-4 \">\r\n            <h4 className=\"h6 fw-bold\"> Eye Tracking Camera (Live)</h4>\r\n            <video ref={videoRef} autoPlay playsInline className=\"w-100 rounded border\" style={{ maxHeight: \"220px\" }} />\r\n         <button\r\n  className=\"btn btn-danger\"\r\n  onClick={stopCameraAndEyeTracking}\r\n    \r\n    \r\n>\r\n  Close Camera\r\n</button>\r\n\r\n  </div>):( <button\r\n  className=\"btn btn-danger\"\r\n  onClick={() => { setShowCamera(true); startEyeTracking(); }}>\r\n  Open Camera\r\n</button>))}\r\n\r\n     {!isSubmitted&&(<FormWithParticles\r\n      handleChange={handleChange}\r\n      handleSubmit={handleSubmit}\r\n      handleFileChange={handleFileChange}\r\n      loading={loading}\r\n    />)}\r\n\r\n          {aiQuestion && (\r\n            <div className=\"mt-5 p-3 bg-light rounded border\">\r\n              <h4 className=\"h4 fw-bold mb-2\"> Question {questionNumber}:</h4>\r\n              <h2>{aiQuestion}</h2>\r\n              {!isAnswered && (\r\n                <button onClick={provideanswer} className=\"btn btn-secondary mb-3\">\r\n                  Check Answer\r\n                </button>\r\n              )}\r\n              {isAnswered && (\r\n                <div className=\"alert alert-info mt-2\">\r\n                  <strong>AI Answer:</strong> {answer}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"mt-3\">\r\n                <h3 className=\"h4 fw-bold\"> Your Answer (Voice Input)</h3>\r\n                <h2 className=\"text-secondary mb-2\">{transcript || \"Your speech will appear here...\"}</h2>\r\n\r\n                <div className=\"d-flex gap-3 mb-3\">\r\n                <div className=\"d-flex  justifyContent-space-between \" >\r\n                  <button type=\"button\" onClick={startListening} className=\"btn btn-success hover-effect\"  >\r\n                    Start Talking\r\n                  </button>\r\n                  <button type=\"button\" onClick={stopListening} className=\"btn btn-danger\" style={{ marginLeft: '10px' }} >\r\n                    Stop\r\n                  </button>\r\n                  <button type=\"button\" onClick={resetanalysis} className=\"btn btn-secondary\" style={{ marginLeft: '10px' }} >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                <button onClick={analyzeTranscript} className=\"btn btn-primary\">Check Analyasis</button>\r\n                </div>\r\n              </div>\r\n              \r\n              {analysis && (<div>\r\n                 <h4 className=\"h6 fw-bold mb-2\">Answer Analysis</h4>\r\n                <div className=\"d-flex flex-row gap-2\">\r\n                  <div className=\"mt-4 p-3 bg-warning bg-opacity-25 rounded\">\r\n                   \r\n                    <p>Fluency Feedback: {fluencyFeedback}</p>\r\n                    \r\n                    <div>\r\n                      <Gauge value={wpm}/>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                   <div className=\"mt-4 p-3 bg-warning bg-opacity-25 rounded\">\r\n                   \r\n                    \r\n                    <p>Grammar Accuracy: {analysis.grammar}%</p>\r\n                    <div>\r\n                      \r\n                      <Gauge value={analysis.grammar}/>\r\n                    </div>\r\n                  </div>\r\n                </div></div>\r\n              )}\r\n              <div className=\"text-end\">\r\n                    <button onClick={handleNextQuestion} className=\"btn btn-info mt-2\">\r\n                      {loading ? (\r\n        <>\r\n          <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n          Generating...\r\n        </>\r\n      ) : (\r\n        \"Next Question\"\r\n      )}\r\n                    </button>\r\n                  </div>\r\n            </div>\r\n            \r\n          )}\r\n        </div>\r\n      </div>\r\n      </VantaBackgroundWrapper> \r\n    </div>\r\n     </VantaBackgroundWrapper></>\r\n     \r\n  );\r\n};\r\n\r\nexport default Checking;"],"mappings":";;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}