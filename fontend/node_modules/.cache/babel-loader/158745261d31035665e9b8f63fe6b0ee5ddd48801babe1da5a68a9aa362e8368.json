{"ast":null,"code":"import _objectSpread from\"C:/Users/Sparsh Chaurasiya/OneDrive/Desktop/react/student-ai-preparation/fontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import{auth,db}from\"../firebase\";import{doc,setDoc,getDoc,collection,query,where,getDocs}from\"firebase/firestore\";import\"../Loginstyle.css\";import{createUserWithEmailAndPassword,signInWithEmailAndPassword,sendEmailVerification,signOut,fetchSignInMethodsForEmail}from\"firebase/auth\";import{useNavigate}from\"react-router-dom\";import GoogleLogin from\"./GoogleLogin\";import GithubLogin from\"./GithubLogin\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const[isLogin,setIsLogin]=useState(true);const[signupData,setSignupData]=useState({email:\"\",password:\"\"});const[loginData,setLoginData]=useState({email:\"\",password:\"\"});const[message,setMessage]=useState(\"\");const[isVerifying,setIsVerifying]=useState(false);useEffect(()=>{if(message){alert(message);setMessage(\"\");}},[message]);const checkEmailExists=async email=>{try{// Check if email exists in authentication system\nconst methods=await fetchSignInMethodsForEmail(auth,email);return methods.length>0;}catch(error){console.error(\"Error checking email:\",error);return false;}};const initiateSignup=async()=>{if(!signupData.email||!signupData.password){setMessage(\"Email and password are required.\");return;}try{// First check if email is already registered\nconst emailExists=await checkEmailExists(signupData.email);if(emailExists){setMessage(\"Email already registered. Please login instead.\");setIsLogin(true);return;}// Create temporary auth user (will be deleted if not verified)\nconst userCredential=await createUserWithEmailAndPassword(auth,signupData.email,signupData.password);const user=userCredential.user;// Send verification email\nawait sendEmailVerification(user);setIsVerifying(true);setMessage(\"Verification email sent. Please check your inbox.\");// Check for verification every 5 seconds\nconst interval=setInterval(async()=>{await user.reload();if(user.emailVerified){clearInterval(interval);setIsVerifying(false);// Only after verification, store user data in Firestore\nawait setDoc(doc(db,\"users\",user.uid),{email:user.email,createdAt:new Date(),emailVerified:true});setMessage(\"Email verified! Account created successfully. Please login.\");await signOut(auth);// Sign out so they can login fresh\nsetIsLogin(true);// Switch to login tab\n}},5000);// Cleanup interval if component unmounts\nreturn()=>{clearInterval(interval);if(!user.emailVerified){// Delete unverified user after timeout (optional)\nsetTimeout(async()=>{await user.delete();},3600000);// 1 hour timeout\n}};}catch(error){setIsVerifying(false);if(error.code===\"auth/email-already-in-use\"){setMessage(\"Email already registered. Please login instead.\");}else{setMessage(\"Signup error: \".concat(error.message));}}};const handleLogin=async()=>{if(!loginData.email||!loginData.password){setMessage(\"Email and password are required.\");return;}try{// First check if user exists in Firestore\nconst usersRef=collection(db,\"users\");const q=query(usersRef,where(\"email\",\"==\",loginData.email));const querySnapshot=await getDocs(q);if(querySnapshot.empty){setMessage(\"Account not found. Please sign up first.\");setIsLogin(false);return;}// User exists in Firestore, proceed with login\nconst userCredential=await signInWithEmailAndPassword(auth,loginData.email,loginData.password);navigate(\"/home\");}catch(error){if(error.code===\"auth/user-not-found\"){setMessage(\"Account not found. Please sign up first.\");setIsLogin(false);}else if(error.code===\"auth/wrong-password\"){setMessage(\"Incorrect password.\");}else{setMessage(\"Login error: \".concat(error.message));}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-structor\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"signup \".concat(isLogin?\"slide-up\":\"\"),children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"form-title\",onClick:()=>!isVerifying&&setIsLogin(false),children:[/*#__PURE__*/_jsx(\"span\",{children:\"or\"}),\"Sign up\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-holder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center mt-2\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(GoogleLogin,{}),/*#__PURE__*/_jsx(GithubLogin,{})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center my-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow-1 border-top\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mx-3 text-muted\",children:\"Or\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow-1 border-top\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"input\",placeholder:\"Email\",value:signupData.email,onChange:e=>setSignupData(_objectSpread(_objectSpread({},signupData),{},{email:e.target.value})),disabled:isVerifying}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input\",placeholder:\"Password\",value:signupData.password,onChange:e=>setSignupData(_objectSpread(_objectSpread({},signupData),{},{password:e.target.value})),disabled:isVerifying})]}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:initiateSignup,disabled:isVerifying,children:isVerifying?\"Verifying...\":\"Sign up\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"login \".concat(isLogin?\"\":\"slide-up\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"center\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"form-title\",onClick:()=>setIsLogin(true),children:[/*#__PURE__*/_jsx(\"span\",{children:\"or\"}),\"Log in\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-holder\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"input\",placeholder:\"Email\",value:loginData.email,onChange:e=>setLoginData(_objectSpread(_objectSpread({},loginData),{},{email:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input\",placeholder:\"Password\",value:loginData.password,onChange:e=>setLoginData(_objectSpread(_objectSpread({},loginData),{},{password:e.target.value}))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleLogin,children:\"Log in\"})]})})]});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","auth","db","doc","setDoc","getDoc","collection","query","where","getDocs","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","signOut","fetchSignInMethodsForEmail","useNavigate","GoogleLogin","GithubLogin","jsx","_jsx","jsxs","_jsxs","Login","navigate","isLogin","setIsLogin","signupData","setSignupData","email","password","loginData","setLoginData","message","setMessage","isVerifying","setIsVerifying","alert","checkEmailExists","methods","length","error","console","initiateSignup","emailExists","userCredential","user","interval","setInterval","reload","emailVerified","clearInterval","uid","createdAt","Date","setTimeout","delete","code","concat","handleLogin","usersRef","q","querySnapshot","empty","className","children","onClick","type","placeholder","value","onChange","e","_objectSpread","target","disabled"],"sources":["C:/Users/Sparsh Chaurasiya/OneDrive/Desktop/react/student-ai-preparation/fontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { doc, setDoc, getDoc, collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport \"../Loginstyle.css\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  signOut,\r\n  fetchSignInMethodsForEmail\r\n} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport GoogleLogin from \"./GoogleLogin\";\r\nimport GithubLogin from \"./GithubLogin\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [signupData, setSignupData] = useState({ email: \"\", password: \"\" });\r\n  const [loginData, setLoginData] = useState({ email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isVerifying, setIsVerifying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      alert(message);\r\n      setMessage(\"\");\r\n    }\r\n  }, [message]);\r\n\r\n  const checkEmailExists = async (email) => {\r\n    try {\r\n      // Check if email exists in authentication system\r\n      const methods = await fetchSignInMethodsForEmail(auth, email);\r\n      return methods.length > 0;\r\n    } catch (error) {\r\n      console.error(\"Error checking email:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const initiateSignup = async () => {\r\n    if (!signupData.email || !signupData.password) {\r\n      setMessage(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // First check if email is already registered\r\n      const emailExists = await checkEmailExists(signupData.email);\r\n      if (emailExists) {\r\n        setMessage(\"Email already registered. Please login instead.\");\r\n        setIsLogin(true);\r\n        return;\r\n      }\r\n\r\n      // Create temporary auth user (will be deleted if not verified)\r\n      const userCredential = await createUserWithEmailAndPassword(\r\n        auth,\r\n        signupData.email,\r\n        signupData.password\r\n      );\r\n      const user = userCredential.user;\r\n\r\n      // Send verification email\r\n      await sendEmailVerification(user);\r\n      setIsVerifying(true);\r\n      setMessage(\"Verification email sent. Please check your inbox.\");\r\n\r\n      // Check for verification every 5 seconds\r\n      const interval = setInterval(async () => {\r\n        await user.reload();\r\n        if (user.emailVerified) {\r\n          clearInterval(interval);\r\n          setIsVerifying(false);\r\n          \r\n          // Only after verification, store user data in Firestore\r\n          await setDoc(doc(db, \"users\", user.uid), {\r\n            email: user.email,\r\n            createdAt: new Date(),\r\n            emailVerified: true\r\n          });\r\n\r\n          setMessage(\"Email verified! Account created successfully. Please login.\");\r\n          await signOut(auth); // Sign out so they can login fresh\r\n          setIsLogin(true); // Switch to login tab\r\n        }\r\n      }, 5000);\r\n\r\n      // Cleanup interval if component unmounts\r\n      return () => {\r\n        clearInterval(interval);\r\n        if (!user.emailVerified) {\r\n          // Delete unverified user after timeout (optional)\r\n          setTimeout(async () => {\r\n            await user.delete();\r\n          }, 3600000); // 1 hour timeout\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      setIsVerifying(false);\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        setMessage(\"Email already registered. Please login instead.\");\r\n      } else {\r\n        setMessage(`Signup error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!loginData.email || !loginData.password) {\r\n      setMessage(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // First check if user exists in Firestore\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"email\", \"==\", loginData.email));\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        setMessage(\"Account not found. Please sign up first.\");\r\n        setIsLogin(false);\r\n        return;\r\n      }\r\n\r\n      // User exists in Firestore, proceed with login\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        loginData.email,\r\n        loginData.password\r\n      );\r\n      \r\n      navigate(\"/home\");\r\n\r\n    } catch (error) {\r\n      if (error.code === \"auth/user-not-found\") {\r\n        setMessage(\"Account not found. Please sign up first.\");\r\n        setIsLogin(false);\r\n      } else if (error.code === \"auth/wrong-password\") {\r\n        setMessage(\"Incorrect password.\");\r\n      } else {\r\n        setMessage(`Login error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-structor\">\r\n      \r\n      <div className={`signup ${isLogin ? \"slide-up\" : \"\"}`}>\r\n        <h2 className=\"form-title\" onClick={() => !isVerifying && setIsLogin(false)}>\r\n          <span>or</span>Sign up\r\n        </h2>\r\n        <div className=\"form-holder\">\r\n          <div className=\"d-flex justify-content-center align-items-center mt-2\">\r\n  <div>\r\n    <GoogleLogin />\r\n    <GithubLogin />\r\n  </div>\r\n  \r\n</div>\r\n<div className=\"d-flex align-items-center my-3\">\r\n  <div className=\"flex-grow-1 border-top\"></div>\r\n  <span className=\"mx-3 text-muted\">Or</span>\r\n  <div className=\"flex-grow-1 border-top\"></div>\r\n</div>\r\n          <input\r\n            type=\"email\"\r\n            className=\"input\"\r\n            placeholder=\"Email\"\r\n            value={signupData.email}\r\n            onChange={(e) => setSignupData({...signupData, email: e.target.value})}\r\n            disabled={isVerifying}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            value={signupData.password}\r\n            onChange={(e) => setSignupData({...signupData, password: e.target.value})}\r\n            disabled={isVerifying}\r\n          />\r\n        </div>\r\n        <button \r\n          className=\"submit-btn\" \r\n          onClick={initiateSignup}\r\n          disabled={isVerifying}\r\n        >\r\n          {isVerifying ? \"Verifying...\" : \"Sign up\"}\r\n        </button>\r\n      </div>\r\n\r\n    \r\n      <div className={`login ${isLogin ? \"\" : \"slide-up\"}`}>\r\n        <div className=\"center\">\r\n          <h2 className=\"form-title\" onClick={() => setIsLogin(true)}>\r\n            <span>or</span>Log in\r\n          </h2>\r\n          <div className=\"form-holder\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email\"\r\n              value={loginData.email}\r\n              onChange={(e) => setLoginData({...loginData, email: e.target.value})}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password\"\r\n              value={loginData.password}\r\n              onChange={(e) => setLoginData({...loginData, password: e.target.value})}\r\n            />\r\n          </div>\r\n          <button className=\"submit-btn\" onClick={handleLogin}>\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}