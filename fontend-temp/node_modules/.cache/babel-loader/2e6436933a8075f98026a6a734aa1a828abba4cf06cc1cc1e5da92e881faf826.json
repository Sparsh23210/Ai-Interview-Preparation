{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Chaurasiya\\\\OneDrive\\\\Desktop\\\\react\\\\student-ai-preparation\\\\fontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { doc, setDoc, getDoc, collection, query, where, getDocs } from \"firebase/firestore\";\nimport \"../Loginstyle.css\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, signOut, fetchSignInMethodsForEmail } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport GoogleLogin from \"./GoogleLogin\";\nimport GithubLogin from \"./GithubLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true);\n  const [signupData, setSignupData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const [isVerifying, setIsVerifying] = useState(false);\n  useEffect(() => {\n    if (message) {\n      alert(message);\n      setMessage(\"\");\n    }\n  }, [message]);\n  const checkEmailExists = async email => {\n    try {\n      // Check if email exists in authentication system\n      const methods = await fetchSignInMethodsForEmail(auth, email);\n      return methods.length > 0;\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n      return false;\n    }\n  };\n  const initiateSignup = async () => {\n    if (!signupData.email || !signupData.password) {\n      setMessage(\"Email and password are required.\");\n      return;\n    }\n    try {\n      // First check if email is already registered\n      const emailExists = await checkEmailExists(signupData.email);\n      if (emailExists) {\n        setMessage(\"Email already registered. Please login instead.\");\n        setIsLogin(true);\n        return;\n      }\n\n      // Create temporary auth user (will be deleted if not verified)\n      const userCredential = await createUserWithEmailAndPassword(auth, signupData.email, signupData.password);\n      const user = userCredential.user;\n\n      // Send verification email\n      await sendEmailVerification(user);\n      setIsVerifying(true);\n      setMessage(\"Verification email sent. Please check your inbox.\");\n\n      // Check for verification every 5 seconds\n      const interval = setInterval(async () => {\n        await user.reload();\n        if (user.emailVerified) {\n          clearInterval(interval);\n          setIsVerifying(false);\n\n          // Only after verification, store user data in Firestore\n          await setDoc(doc(db, \"users\", user.uid), {\n            email: user.email,\n            createdAt: new Date(),\n            emailVerified: true\n          });\n          setMessage(\"Email verified! Account created successfully. Please login.\");\n          await signOut(auth); // Sign out so they can login fresh\n          setIsLogin(true); // Switch to login tab\n        }\n      }, 5000);\n\n      // Cleanup interval if component unmounts\n      return () => {\n        clearInterval(interval);\n        if (!user.emailVerified) {\n          // Delete unverified user after timeout (optional)\n          setTimeout(async () => {\n            await user.delete();\n          }, 3600000); // 1 hour timeout\n        }\n      };\n    } catch (error) {\n      setIsVerifying(false);\n      if (error.code === \"auth/email-already-in-use\") {\n        setMessage(\"Email already registered. Please login instead.\");\n      } else {\n        setMessage(`Signup error: ${error.message}`);\n      }\n    }\n  };\n  const handleLogin = async () => {\n    if (!loginData.email || !loginData.password) {\n      setMessage(\"Email and password are required.\");\n      return;\n    }\n    try {\n      // First check if user exists in Firestore\n      const usersRef = collection(db, \"users\");\n      const q = query(usersRef, where(\"email\", \"==\", loginData.email));\n      const querySnapshot = await getDocs(q);\n      if (querySnapshot.empty) {\n        setMessage(\"Account not found. Please sign up first.\");\n        setIsLogin(false);\n        return;\n      }\n\n      // User exists in Firestore, proceed with login\n      const userCredential = await signInWithEmailAndPassword(auth, loginData.email, loginData.password);\n      navigate(\"/home\");\n    } catch (error) {\n      if (error.code === \"auth/user-not-found\") {\n        setMessage(\"Account not found. Please sign up first.\");\n        setIsLogin(false);\n      } else if (error.code === \"auth/wrong-password\") {\n        setMessage(\"Incorrect password.\");\n      } else {\n        setMessage(`Login error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-structor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `signup ${isLogin ? \"slide-up\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        onClick: () => !isVerifying && setIsLogin(false),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), \"Sign up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(GithubLogin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"input\",\n          placeholder: \"Email\",\n          value: signupData.email,\n          onChange: e => setSignupData({\n            ...signupData,\n            email: e.target.value\n          }),\n          disabled: isVerifying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input\",\n          placeholder: \"Password\",\n          value: signupData.password,\n          onChange: e => setSignupData({\n            ...signupData,\n            password: e.target.value\n          }),\n          disabled: isVerifying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: initiateSignup,\n        disabled: isVerifying,\n        children: isVerifying ? \"Verifying...\" : \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login ${isLogin ? \"\" : \"slide-up\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form-title\",\n          onClick: () => setIsLogin(true),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), \"Log in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"input\",\n            placeholder: \"Email\",\n            value: loginData.email,\n            onChange: e => setLoginData({\n              ...loginData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input\",\n            placeholder: \"Password\",\n            value: loginData.password,\n            onChange: e => setLoginData({\n              ...loginData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          onClick: handleLogin,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"yDLtVOiEtj8AQN35SX0HRZ4mRQw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","doc","setDoc","getDoc","collection","query","where","getDocs","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","signOut","fetchSignInMethodsForEmail","useNavigate","GoogleLogin","GithubLogin","jsxDEV","_jsxDEV","Login","_s","navigate","isLogin","setIsLogin","signupData","setSignupData","email","password","loginData","setLoginData","message","setMessage","isVerifying","setIsVerifying","alert","checkEmailExists","methods","length","error","console","initiateSignup","emailExists","userCredential","user","interval","setInterval","reload","emailVerified","clearInterval","uid","createdAt","Date","setTimeout","delete","code","handleLogin","usersRef","q","querySnapshot","empty","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Chaurasiya/OneDrive/Desktop/react/student-ai-preparation/fontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { doc, setDoc, getDoc, collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport \"../Loginstyle.css\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  signOut,\r\n  fetchSignInMethodsForEmail\r\n} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport GoogleLogin from \"./GoogleLogin\";\r\nimport GithubLogin from \"./GithubLogin\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [signupData, setSignupData] = useState({ email: \"\", password: \"\" });\r\n  const [loginData, setLoginData] = useState({ email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isVerifying, setIsVerifying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      alert(message);\r\n      setMessage(\"\");\r\n    }\r\n  }, [message]);\r\n\r\n  const checkEmailExists = async (email) => {\r\n    try {\r\n      // Check if email exists in authentication system\r\n      const methods = await fetchSignInMethodsForEmail(auth, email);\r\n      return methods.length > 0;\r\n    } catch (error) {\r\n      console.error(\"Error checking email:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const initiateSignup = async () => {\r\n    if (!signupData.email || !signupData.password) {\r\n      setMessage(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // First check if email is already registered\r\n      const emailExists = await checkEmailExists(signupData.email);\r\n      if (emailExists) {\r\n        setMessage(\"Email already registered. Please login instead.\");\r\n        setIsLogin(true);\r\n        return;\r\n      }\r\n\r\n      // Create temporary auth user (will be deleted if not verified)\r\n      const userCredential = await createUserWithEmailAndPassword(\r\n        auth,\r\n        signupData.email,\r\n        signupData.password\r\n      );\r\n      const user = userCredential.user;\r\n\r\n      // Send verification email\r\n      await sendEmailVerification(user);\r\n      setIsVerifying(true);\r\n      setMessage(\"Verification email sent. Please check your inbox.\");\r\n\r\n      // Check for verification every 5 seconds\r\n      const interval = setInterval(async () => {\r\n        await user.reload();\r\n        if (user.emailVerified) {\r\n          clearInterval(interval);\r\n          setIsVerifying(false);\r\n          \r\n          // Only after verification, store user data in Firestore\r\n          await setDoc(doc(db, \"users\", user.uid), {\r\n            email: user.email,\r\n            createdAt: new Date(),\r\n            emailVerified: true\r\n          });\r\n\r\n          setMessage(\"Email verified! Account created successfully. Please login.\");\r\n          await signOut(auth); // Sign out so they can login fresh\r\n          setIsLogin(true); // Switch to login tab\r\n        }\r\n      }, 5000);\r\n\r\n      // Cleanup interval if component unmounts\r\n      return () => {\r\n        clearInterval(interval);\r\n        if (!user.emailVerified) {\r\n          // Delete unverified user after timeout (optional)\r\n          setTimeout(async () => {\r\n            await user.delete();\r\n          }, 3600000); // 1 hour timeout\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      setIsVerifying(false);\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        setMessage(\"Email already registered. Please login instead.\");\r\n      } else {\r\n        setMessage(`Signup error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!loginData.email || !loginData.password) {\r\n      setMessage(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // First check if user exists in Firestore\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"email\", \"==\", loginData.email));\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (querySnapshot.empty) {\r\n        setMessage(\"Account not found. Please sign up first.\");\r\n        setIsLogin(false);\r\n        return;\r\n      }\r\n\r\n      // User exists in Firestore, proceed with login\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        loginData.email,\r\n        loginData.password\r\n      );\r\n      \r\n      navigate(\"/home\");\r\n\r\n    } catch (error) {\r\n      if (error.code === \"auth/user-not-found\") {\r\n        setMessage(\"Account not found. Please sign up first.\");\r\n        setIsLogin(false);\r\n      } else if (error.code === \"auth/wrong-password\") {\r\n        setMessage(\"Incorrect password.\");\r\n      } else {\r\n        setMessage(`Login error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-structor\">\r\n      \r\n      <div className={`signup ${isLogin ? \"slide-up\" : \"\"}`}>\r\n        <h2 className=\"form-title\" onClick={() => !isVerifying && setIsLogin(false)}>\r\n          <span>or</span>Sign up\r\n        </h2>\r\n        <div className=\"form-holder\">\r\n          <div className=\"d-flex justify-content-center align-items-center mt-2\">\r\n  <div>\r\n    <GoogleLogin />\r\n    <GithubLogin />\r\n  </div>\r\n  <p>or</p>\r\n</div>\r\n          <input\r\n            type=\"email\"\r\n            className=\"input\"\r\n            placeholder=\"Email\"\r\n            value={signupData.email}\r\n            onChange={(e) => setSignupData({...signupData, email: e.target.value})}\r\n            disabled={isVerifying}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            value={signupData.password}\r\n            onChange={(e) => setSignupData({...signupData, password: e.target.value})}\r\n            disabled={isVerifying}\r\n          />\r\n        </div>\r\n        <button \r\n          className=\"submit-btn\" \r\n          onClick={initiateSignup}\r\n          disabled={isVerifying}\r\n        >\r\n          {isVerifying ? \"Verifying...\" : \"Sign up\"}\r\n        </button>\r\n      </div>\r\n\r\n    \r\n      <div className={`login ${isLogin ? \"\" : \"slide-up\"}`}>\r\n        <div className=\"center\">\r\n          <h2 className=\"form-title\" onClick={() => setIsLogin(true)}>\r\n            <span>or</span>Log in\r\n          </h2>\r\n          <div className=\"form-holder\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email\"\r\n              value={loginData.email}\r\n              onChange={(e) => setLoginData({...loginData, email: e.target.value})}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password\"\r\n              value={loginData.password}\r\n              onChange={(e) => setLoginData({...loginData, password: e.target.value})}\r\n            />\r\n          </div>\r\n          <button className=\"submit-btn\" onClick={handleLogin}>\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}