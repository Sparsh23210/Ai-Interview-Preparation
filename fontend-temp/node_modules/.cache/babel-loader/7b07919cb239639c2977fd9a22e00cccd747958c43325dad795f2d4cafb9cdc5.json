{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Chaurasiya\\\\OneDrive\\\\Desktop\\\\react\\\\student-ai-preparation\\\\fontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport \"../Loginstyle.css\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, signOut } from \"firebase/auth\";\nimport GoogleLogin from \"./GoogleLogin\";\nimport GithubLogin from \"./GithubLogin\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(false);\n  const [signupData, setSignupData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    if (message) {\n      alert(message);\n      setMessage(\"\");\n    }\n  }, [message]);\n  const handleSignup = async () => {\n    if (!signupData.email || !signupData.password) {\n      setMessage(\" Email and password are required for signup.\");\n      return;\n    }\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, signupData.email, signupData.password);\n      const user = userCredential.user;\n      await sendEmailVerification(user);\n      await signOut(auth);\n      setMessage(\"Verify your Email\");\n      await user.reload();\n      if (user.emailVerified) {\n        alert(\"✅ Email verified. You can now log in.\");\n      } else {\n        alert(\"❌ Email not verified yet. Please check your inbox.\");\n        await signOut(auth);\n      }\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        setMessage(\" Email already in use. Please login instead.\");\n      } else {\n        setMessage(` ${error.message}`);\n      }\n    }\n  };\n  const handleLogin = async () => {\n    if (!loginData.email || !loginData.password) {\n      setMessage(\"Email and password are required for login.\");\n      return;\n    }\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, loginData.email, loginData.password);\n      const user = userCredential.user;\n      if (!user.emailVerified) {\n        await sendEmailVerification(user);\n        await signOut(auth);\n        setMessage(\" Please verify your email first. A new link has been sent.\");\n        return;\n      }\n      const userRef = doc(db, \"users\", user.uid);\n      const userSnap = await getDoc(userRef);\n      if (!userSnap.exists()) {\n        await setDoc(userRef, {\n          email: user.email,\n          createdAt: new Date()\n        });\n      }\n      setMessage(\"✅ Login successful!\");\n    } catch (error) {\n      setMessage(`❌ ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VantaBackground, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-structor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `signup ${isLogin ? \"slide-up\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"form-title\",\n            onClick: () => setIsLogin(false),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"or\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }, this), \"Sign up\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"input\",\n              placeholder: \"Email\",\n              name: \"email\",\n              value: signupData.email,\n              onChange: e => setSignupData({\n                ...signupData,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"input\",\n              placeholder: \"Password\",\n              name: \"password\",\n              value: signupData.password,\n              onChange: e => setSignupData({\n                ...signupData,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleSignup,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `login ${isLogin ? \"\" : \"slide-up\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"form-title\",\n              onClick: () => setIsLogin(true),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"or\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 13\n              }, this), \"Log in\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-holder\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-center align-items-center mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 5\n                  }, this), /*#__PURE__*/_jsxDEV(GithubLogin, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 5\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 3\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"or\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 3\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"input\",\n                placeholder: \"Email\",\n                name: \"email\",\n                value: loginData.email,\n                onChange: e => setLoginData({\n                  ...loginData,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"input\",\n                placeholder: \"Password\",\n                name: \"password\",\n                value: loginData.password,\n                onChange: e => setLoginData({\n                  ...loginData,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-btn text-white \",\n              onClick: handleLogin,\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"rUq79Bj7V3UyqHWNDzDN8KboROs=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","doc","setDoc","getDoc","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","signOut","GoogleLogin","GithubLogin","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","isLogin","setIsLogin","signupData","setSignupData","email","password","loginData","setLoginData","message","setMessage","alert","handleSignup","userCredential","user","reload","emailVerified","error","code","handleLogin","userRef","uid","userSnap","exists","createdAt","Date","children","VantaBackground","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Chaurasiya/OneDrive/Desktop/react/student-ai-preparation/fontend/src/components/Login.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { auth,db } from \"../firebase\";\r\nimport { doc, setDoc,getDoc } from \"firebase/firestore\";\r\nimport \"../Loginstyle.css\"\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  signOut\r\n} from \"firebase/auth\";\r\n \r\nimport GoogleLogin from \"./GoogleLogin\";\r\nimport GithubLogin from \"./GithubLogin\";\r\n\r\nconst Login=()=> {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [signupData, setSignupData] = useState({ email: \"\", password: \"\" });\r\nconst [loginData, setLoginData] = useState({ email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\nuseEffect(() => {\r\n  if (message) {\r\n    alert(message);\r\n    setMessage(\"\"); \r\n  }\r\n}, [message]);\r\n  \r\n\r\n  const handleSignup = async () => {\r\n    if (!signupData.email || !signupData.password) {\r\n    setMessage(\" Email and password are required for signup.\");\r\n    return;\r\n  }\r\n    try {\r\n      const userCredential=await createUserWithEmailAndPassword(auth, signupData.email, signupData.password);\r\n      const user = userCredential.user;\r\n      await sendEmailVerification(user);\r\n\r\n      await signOut(auth);\r\nsetMessage(\"Verify your Email\");\r\n   \r\n    await user.reload(); \r\nif (user.emailVerified) {\r\n  alert(\"✅ Email verified. You can now log in.\");\r\n} else {\r\n  alert(\"❌ Email not verified yet. Please check your inbox.\");\r\n  await signOut(auth);\r\n}\r\n    \r\n   \r\n    } catch (error) {\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n      setMessage(\" Email already in use. Please login instead.\");\r\n    } else {\r\n      setMessage(` ${error.message}`);\r\n    }\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n  if (!loginData.email || !loginData.password) {\r\n    setMessage(\"Email and password are required for login.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, loginData.email, loginData.password);\r\n    const user = userCredential.user;\r\n\r\n    if (!user.emailVerified) {\r\n      await sendEmailVerification(user); \r\n      await signOut(auth);\r\n      setMessage(\" Please verify your email first. A new link has been sent.\");\r\n      return;\r\n    }\r\n\r\n   \r\n    const userRef = doc(db, \"users\", user.uid);\r\n    const userSnap = await getDoc(userRef);\r\n\r\n    if (!userSnap.exists()) {\r\n      await setDoc(userRef, {\r\n        email: user.email,\r\n        createdAt: new Date()\r\n      });\r\n    }\r\n\r\n    setMessage(\"✅ Login successful!\");\r\n  } catch (error) {\r\n    setMessage(`❌ ${error.message}`);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <><VantaBackground>\r\n    <div className=\"form-structor\">\r\n      \r\n      <div className={`signup ${isLogin ? \"slide-up\" : \"\"}`}>\r\n        <h2 className=\"form-title\" onClick={() => setIsLogin(false)}>\r\n          <span>or</span>Sign up\r\n        </h2>\r\n        <div className=\"form-holder\">\r\n          \r\n          <input\r\n            type=\"email\"\r\n            className=\"input\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={signupData.email}\r\n            onChange={(e) => setSignupData({ ...signupData, email: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={signupData.password}\r\n            onChange={(e) => setSignupData({ ...signupData, password: e.target.value })}\r\n          />\r\n        </div>\r\n        <button className=\"submit-btn\" onClick={handleSignup}>\r\n          Sign up\r\n        </button>\r\n      </div>\r\n\r\n      \r\n      <div className={`login ${isLogin ? \"\" : \"slide-up\"}`}>\r\n        <div className=\"center\">\r\n          <h2 className=\"form-title\" onClick={() => setIsLogin(true)}>\r\n            <span>or</span>Log in\r\n          </h2>\r\n          \r\n          <div className=\"form-holder\">\r\n            <div className=\"d-flex justify-content-center align-items-center mt-2\">\r\n  <div>\r\n    <GoogleLogin />\r\n    <GithubLogin />\r\n  </div>\r\n</div>\r\n            <div className=\"d-flex justify-content-center\">\r\n  <h4>or</h4>\r\n</div>\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              value={loginData.email}\r\n              onChange={(e) => setLoginData({ ...loginData, email: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={loginData.password}\r\n               onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\r\n            />\r\n          </div>\r\n          <button className=\"submit-btn text-white \" onClick={handleLogin}>\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n     \r\n     \r\n    </div></VantaBackground></>\r\n  );\r\n}\r\nexport default Login;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAACC,EAAE,QAAQ,aAAa;AACrC,SAASC,GAAG,EAAEC,MAAM,EAACC,MAAM,QAAQ,oBAAoB;AACvD,OAAO,mBAAmB;AAC1B,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,qBAAqB,EACrBC,OAAO,QACF,eAAe;AAEtB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,KAAK,GAACA,CAAA,KAAK;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC;IAAEuB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC;IAAEuB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACrE,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACd,IAAI0B,OAAO,EAAE;MACXE,KAAK,CAACF,OAAO,CAAC;MACdC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAGX,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACT,UAAU,CAACE,KAAK,IAAI,CAACF,UAAU,CAACG,QAAQ,EAAE;MAC/CI,UAAU,CAAC,8CAA8C,CAAC;MAC1D;IACF;IACE,IAAI;MACF,MAAMG,cAAc,GAAC,MAAMxB,8BAA8B,CAACL,IAAI,EAAEmB,UAAU,CAACE,KAAK,EAAEF,UAAU,CAACG,QAAQ,CAAC;MACtG,MAAMQ,IAAI,GAAGD,cAAc,CAACC,IAAI;MAChC,MAAMvB,qBAAqB,CAACuB,IAAI,CAAC;MAEjC,MAAMtB,OAAO,CAACR,IAAI,CAAC;MACzB0B,UAAU,CAAC,mBAAmB,CAAC;MAE3B,MAAMI,IAAI,CAACC,MAAM,CAAC,CAAC;MACvB,IAAID,IAAI,CAACE,aAAa,EAAE;QACtBL,KAAK,CAAC,uCAAuC,CAAC;MAChD,CAAC,MAAM;QACLA,KAAK,CAAC,oDAAoD,CAAC;QAC3D,MAAMnB,OAAO,CAACR,IAAI,CAAC;MACrB;IAGI,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,IAAI,KAAK,2BAA2B,EAAE;QAChDR,UAAU,CAAC,8CAA8C,CAAC;MAC5D,CAAC,MAAM;QACLA,UAAU,CAAC,IAAIO,KAAK,CAACR,OAAO,EAAE,CAAC;MACjC;IACA;EACF,CAAC;EAED,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACZ,SAAS,CAACF,KAAK,IAAI,CAACE,SAAS,CAACD,QAAQ,EAAE;MAC3CI,UAAU,CAAC,4CAA4C,CAAC;MACxD;IACF;IAEA,IAAI;MACF,MAAMG,cAAc,GAAG,MAAMvB,0BAA0B,CAACN,IAAI,EAAEuB,SAAS,CAACF,KAAK,EAAEE,SAAS,CAACD,QAAQ,CAAC;MAClG,MAAMQ,IAAI,GAAGD,cAAc,CAACC,IAAI;MAEhC,IAAI,CAACA,IAAI,CAACE,aAAa,EAAE;QACvB,MAAMzB,qBAAqB,CAACuB,IAAI,CAAC;QACjC,MAAMtB,OAAO,CAACR,IAAI,CAAC;QACnB0B,UAAU,CAAC,4DAA4D,CAAC;QACxE;MACF;MAGA,MAAMU,OAAO,GAAGlC,GAAG,CAACD,EAAE,EAAE,OAAO,EAAE6B,IAAI,CAACO,GAAG,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMlC,MAAM,CAACgC,OAAO,CAAC;MAEtC,IAAI,CAACE,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACtB,MAAMpC,MAAM,CAACiC,OAAO,EAAE;UACpBf,KAAK,EAAES,IAAI,CAACT,KAAK;UACjBmB,SAAS,EAAE,IAAIC,IAAI,CAAC;QACtB,CAAC,CAAC;MACJ;MAEAf,UAAU,CAAC,qBAAqB,CAAC;IACnC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdP,UAAU,CAAC,KAAKO,KAAK,CAACR,OAAO,EAAE,CAAC;IAClC;EACF,CAAC;EAGC,oBACEb,OAAA,CAAAE,SAAA;IAAA4B,QAAA,eAAE9B,OAAA,CAAC+B,eAAe;MAAAD,QAAA,eAClB9B,OAAA;QAAKgC,SAAS,EAAC,eAAe;QAAAF,QAAA,gBAE5B9B,OAAA;UAAKgC,SAAS,EAAE,UAAU3B,OAAO,GAAG,UAAU,GAAG,EAAE,EAAG;UAAAyB,QAAA,gBACpD9B,OAAA;YAAIgC,SAAS,EAAC,YAAY;YAACC,OAAO,EAAEA,CAAA,KAAM3B,UAAU,CAAC,KAAK,CAAE;YAAAwB,QAAA,gBAC1D9B,OAAA;cAAA8B,QAAA,EAAM;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,WACjB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLrC,OAAA;YAAKgC,SAAS,EAAC,aAAa;YAAAF,QAAA,gBAE1B9B,OAAA;cACEsC,IAAI,EAAC,OAAO;cACZN,SAAS,EAAC,OAAO;cACjBO,WAAW,EAAC,OAAO;cACnBC,IAAI,EAAC,OAAO;cACZC,KAAK,EAAElC,UAAU,CAACE,KAAM;cACxBiC,QAAQ,EAAGC,CAAC,IAAKnC,aAAa,CAAC;gBAAE,GAAGD,UAAU;gBAAEE,KAAK,EAAEkC,CAAC,CAACC,MAAM,CAACH;cAAM,CAAC;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E,CAAC,eACFrC,OAAA;cACEsC,IAAI,EAAC,UAAU;cACfN,SAAS,EAAC,OAAO;cACjBO,WAAW,EAAC,UAAU;cACtBC,IAAI,EAAC,UAAU;cACfC,KAAK,EAAElC,UAAU,CAACG,QAAS;cAC3BgC,QAAQ,EAAGC,CAAC,IAAKnC,aAAa,CAAC;gBAAE,GAAGD,UAAU;gBAAEG,QAAQ,EAAEiC,CAAC,CAACC,MAAM,CAACH;cAAM,CAAC;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNrC,OAAA;YAAQgC,SAAS,EAAC,YAAY;YAACC,OAAO,EAAEjB,YAAa;YAAAc,QAAA,EAAC;UAEtD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGNrC,OAAA;UAAKgC,SAAS,EAAE,SAAS3B,OAAO,GAAG,EAAE,GAAG,UAAU,EAAG;UAAAyB,QAAA,eACnD9B,OAAA;YAAKgC,SAAS,EAAC,QAAQ;YAAAF,QAAA,gBACrB9B,OAAA;cAAIgC,SAAS,EAAC,YAAY;cAACC,OAAO,EAAEA,CAAA,KAAM3B,UAAU,CAAC,IAAI,CAAE;cAAAwB,QAAA,gBACzD9B,OAAA;gBAAA8B,QAAA,EAAM;cAAE;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,UACjB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAELrC,OAAA;cAAKgC,SAAS,EAAC,aAAa;cAAAF,QAAA,gBAC1B9B,OAAA;gBAAKgC,SAAS,EAAC,uDAAuD;gBAAAF,QAAA,eAChF9B,OAAA;kBAAA8B,QAAA,gBACE9B,OAAA,CAACH,WAAW;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACfrC,OAAA,CAACF,WAAW;oBAAAoC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACMrC,OAAA;gBAAKgC,SAAS,EAAC,+BAA+B;gBAAAF,QAAA,eACxD9B,OAAA;kBAAA8B,QAAA,EAAI;gBAAE;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,eACMrC,OAAA;gBACEsC,IAAI,EAAC,OAAO;gBACZN,SAAS,EAAC,OAAO;gBACjBO,WAAW,EAAC,OAAO;gBACnBC,IAAI,EAAC,OAAO;gBACZC,KAAK,EAAE9B,SAAS,CAACF,KAAM;gBACvBiC,QAAQ,EAAGC,CAAC,IAAK/B,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEF,KAAK,EAAEkC,CAAC,CAACC,MAAM,CAACH;gBAAM,CAAC;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxE,CAAC,eACFrC,OAAA;gBACEsC,IAAI,EAAC,UAAU;gBACfN,SAAS,EAAC,OAAO;gBACjBO,WAAW,EAAC,UAAU;gBACtBC,IAAI,EAAC,UAAU;gBACfC,KAAK,EAAE9B,SAAS,CAACD,QAAS;gBACzBgC,QAAQ,EAAGC,CAAC,IAAK/B,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAED,QAAQ,EAAEiC,CAAC,CAACC,MAAM,CAACH;gBAAM,CAAC;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5E,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNrC,OAAA;cAAQgC,SAAS,EAAC,wBAAwB;cAACC,OAAO,EAAEV,WAAY;cAAAO,QAAA,EAAC;YAEjE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB;EAAC,gBAAE,CAAC;AAE/B,CAAC;AAAAjC,EAAA,CA3JKD,KAAK;AAAA0C,EAAA,GAAL1C,KAAK;AA4JX,eAAeA,KAAK;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}