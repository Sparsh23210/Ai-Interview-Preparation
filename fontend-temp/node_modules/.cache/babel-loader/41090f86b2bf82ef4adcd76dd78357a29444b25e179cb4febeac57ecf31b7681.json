{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sparsh Chaurasiya\\\\OneDrive\\\\Desktop\\\\react\\\\student-ai-preparation\\\\fontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { auth,db } from \"../firebase\";\n// import { doc, setDoc,getDoc } from \"firebase/firestore\";\n// import \"../Loginstyle.css\"\n// import VantaBackgroundWrapper from \"../VantaBackgroundWrapper\";\n// import {\n//   createUserWithEmailAndPassword,\n//   signInWithEmailAndPassword,\n//   sendEmailVerification,\n//   signOut\n// } from \"firebase/auth\";\n// import { useNavigate } from \"react-router-dom\";\n\n// import GoogleLogin from \"./GoogleLogin\";\n// import GithubLogin from \"./GithubLogin\";\n// import { Link } from \"react-router-dom\";\n\n// const Login=()=> {\n//   const navigate = useNavigate();\n//   const [isLogin, setIsLogin] = useState(false);\n//   const [signupData, setSignupData] = useState({ email: \"\", password: \"\" });\n// const [loginData, setLoginData] = useState({ email: \"\", password: \"\" });\n//   const [message, setMessage] = useState(\"\");\n// useEffect(() => {\n//   if (message) {\n//     alert(message);\n//     setMessage(\"\"); \n//   }\n// }, [message]);\n\n//   const handleSignup = async () => {\n//     if (!signupData.email || !signupData.password) {\n//     setMessage(\" Email and password are required for signup.\");\n//     return;\n//   }\n//     try {\n//       const userCredential=await createUserWithEmailAndPassword(auth, signupData.email, signupData.password);\n//       const user = userCredential.user;\n//       await sendEmailVerification(user);\n\n// setMessage(\"Verify your Email\");\n\n// if (user.emailVerified) {\n//   alert(\"✅ Email verified. You can now log in.\");\n// } else {\n//   alert(\"❌ Email not verified yet. Please check your inbox.\");\n//   await signOut(auth);\n// }\n\n//     } catch (error) {\n//       if (error.code === \"auth/email-already-in-use\") {\n//       setMessage(\" Email already in use. Please login instead.\");\n//     } else {\n//       setMessage(` ${error.message}`);\n//     }\n//     }\n//   };\n// useEffect(() => {\n//   console.log(\"Current path:\", window.location.pathname);\n// }, [navigate]);\n//   const handleLogin = async () => {\n//   if (!loginData.email || !loginData.password) {\n//     setMessage(\"Email and password are required for login.\");\n//     return;\n//   }\n\n//   try {\n//     const userCredential = await signInWithEmailAndPassword(\n//       auth,\n//       loginData.email,\n//       loginData.password\n//     );\n//     const user = userCredential.user;\n//     const userRef = doc(db, \"users\", user.uid);\n//     const userSnap = await getDoc(userRef);\n//   if(userSnap.exists()){\n//      setMessage(\"✅ Login successful!\");\n//       navigate(\"/home\");\n//   }\n\n//       if (!user.emailVerified) {\n//         setMessage(\"📧 Please verify your email first. A new link has been sent.\");\n//         await sendEmailVerification(user);\n\n//         await signOut(auth);\n//         return;\n//       }\n\n//       if(user.emailVerified){\n//       if (!userSnap.exists()) {\n//       await setDoc(userRef, {\n//         email: user.email,\n//         createdAt: new Date()\n//       });\n//     }}\n\n//       setMessage(\"✅ Login successful!\");\n//       navigate(\"/home\");\n//     }\n//    catch (error) {\n//     if (error.code === \"auth/user-not-found\") {\n//     setMessage(\"❌ No user found with this email. Please sign up.\");\n//   } else if (error.code === \"auth/wrong-password\") {\n//     setMessage(\"❌ Incorrect password. Please try again.\");\n//   } else {\n//     setMessage(`❌ ${error.message}`);\n//   }\n//   }\n// };\n// useEffect(() => {\n//   const testFirestore = async () => {\n//     try {\n//       await setDoc(doc(db, \"test\", \"test\"), { test: true });\n//       console.log(\"Firestore is working!\");\n//     } catch (error) {\n//       console.error(\"Firestore error:\", error);\n//     }\n//   };\n//   testFirestore();\n// }, []);\n\n//   return (\n\n//     <div className=\"form-structor\">\n\n//       <div className={`signup ${isLogin ? \"slide-up\" : \"\"}`}>\n//         <h2 className=\"form-title\" onClick={() => setIsLogin(false)}>\n//           <span>or</span>Sign up\n//         </h2>\n//         <div className=\"form-holder\">\n\n//           <input\n//             type=\"email\"\n//             className=\"input\"\n//             placeholder=\"Email\"\n//             name=\"email\"\n//             value={signupData.email}\n//             onChange={(e) => setSignupData({ ...signupData, email: e.target.value })}\n//           />\n//           <input\n//             type=\"password\"\n//             className=\"input\"\n//             placeholder=\"Password\"\n//             name=\"password\"\n//             value={signupData.password}\n//             onChange={(e) => setSignupData({ ...signupData, password: e.target.value })}\n//           />\n//         </div>\n//         <button className=\"submit-btn\" onClick={handleSignup}>\n//           Sign up\n//         </button>\n//       </div>\n\n//       <div className={`login ${isLogin ? \"\" : \"slide-up\"}`}>\n//         <div className=\"center\">\n//           <h2 className=\"form-title\" onClick={() => setIsLogin(true)}>\n//             <span>or</span>Log in\n//           </h2>\n\n//           <div className=\"form-holder\">\n//             <div className=\"d-flex justify-content-center align-items-center mt-2\">\n//   <div>\n//     <GoogleLogin />\n//     <GithubLogin />\n//   </div>\n// </div>\n//             <div className=\"d-flex justify-content-center\">\n//   <h4>or</h4>\n// </div>\n//             <input\n//               type=\"email\"\n//               className=\"input\"\n//               placeholder=\"Email\"\n//               name=\"email\"\n//               value={loginData.email}\n//               onChange={(e) => setLoginData({ ...loginData, email: e.target.value })}\n//             />\n//             <input\n//               type=\"password\"\n//               className=\"input\"\n//               placeholder=\"Password\"\n//               name=\"password\"\n//               value={loginData.password}\n//                onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\n//             />\n//           </div>\n//           <button className=\"submit-btn text-white \" onClick={handleLogin}>\n//             Log in\n//           </button>\n//         </div>\n//       </div>\n\n//     </div>\n//   );\n// }\n// export default Login;\nimport React, { useState, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport \"../Loginstyle.css\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, signOut } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLogin, setIsLogin] = useState(true); // Default to login tab\n  const [signupData, setSignupData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    if (message) {\n      alert(message);\n      setMessage(\"\");\n    }\n  }, [message]);\n  const handleSignup = async () => {\n    if (!signupData.email || !signupData.password) {\n      setMessage(\"Email and password are required for signup.\");\n      return;\n    }\n    try {\n      // Create user\n      const userCredential = await createUserWithEmailAndPassword(auth, signupData.email, signupData.password);\n      const user = userCredential.user;\n\n      // Send verification email\n      await sendEmailVerification(user);\n      setMessage(\"Verification email sent. Please check your inbox.\");\n\n      // Store basic user data immediately (before verification)\n      await setDoc(doc(db, \"users\", user.uid), {\n        email: user.email,\n        createdAt: new Date(),\n        emailVerified: false // Track verification status\n      });\n\n      // Sign out and wait for verification\n      await signOut(auth);\n\n      // Check verification status periodically\n      const interval = setInterval(async () => {\n        await user.reload();\n        if (user.emailVerified) {\n          clearInterval(interval);\n\n          // Update verification status in Firestore\n          await setDoc(doc(db, \"users\", user.uid), {\n            emailVerified: true\n          }, {\n            merge: true\n          });\n          alert(\"Email verified! Please login.\");\n          setIsLogin(true);\n        }\n      }, 5000);\n      return () => clearInterval(interval);\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        setMessage(\"Email already registered. Please login instead.\");\n        setIsLogin(true);\n      } else {\n        setMessage(`Signup error: ${error.message}`);\n      }\n    }\n  };\n  const handleLogin = async () => {\n    if (!loginData.email || !loginData.password) {\n      setMessage(\"Email and password are required.\");\n      return;\n    }\n    try {\n      // Authenticate user\n      const userCredential = await signInWithEmailAndPassword(auth, loginData.email, loginData.password);\n      const user = userCredential.user;\n\n      // Check Firestore for user record\n      const userDoc = await getDoc(doc(db, \"users\", user.uid));\n      if (!userDoc.exists()) {\n        // User doesn't exist in Firestore (legacy account)\n        await setDoc(doc(db, \"users\", user.uid), {\n          email: user.email,\n          createdAt: new Date(),\n          emailVerified: user.emailVerified\n        });\n      }\n\n      // For existing Firestore users, skip verification check\n      if (userDoc.exists() && userDoc.data().emailVerified) {\n        navigate(\"/home\");\n        return;\n      }\n\n      // For new accounts or unverified users\n      if (!user.emailVerified) {\n        await sendEmailVerification(user);\n        setMessage(\"Please verify your email first. New link sent.\");\n        await signOut(auth);\n        return;\n      }\n\n      // If verified but not in Firestore (shouldn't happen)\n      navigate(\"/home\");\n    } catch (error) {\n      if (error.code === \"auth/user-not-found\") {\n        setMessage(\"Account not found. Please sign up.\");\n        setIsLogin(false);\n      } else if (error.code === \"auth/wrong-password\") {\n        setMessage(\"Incorrect password.\");\n      } else {\n        setMessage(`Login error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-structor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `signup ${isLogin ? \"slide-up\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        onClick: () => setIsLogin(false),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), \"Sign up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"input\",\n          placeholder: \"Email\",\n          value: signupData.email,\n          onChange: e => setSignupData({\n            ...signupData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input\",\n          placeholder: \"Password\",\n          value: signupData.password,\n          onChange: e => setSignupData({\n            ...signupData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: handleSignup,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login ${isLogin ? \"\" : \"slide-up\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form-title\",\n          onClick: () => setIsLogin(true),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), \"Log in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"input\",\n            placeholder: \"Email\",\n            value: loginData.email,\n            onChange: e => setLoginData({\n              ...loginData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input\",\n            placeholder: \"Password\",\n            value: loginData.password,\n            onChange: e => setLoginData({\n              ...loginData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          onClick: handleLogin,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"rI8khSjwrYH8ic88AG3cwmnG8OM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","doc","setDoc","getDoc","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","signOut","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","isLogin","setIsLogin","signupData","setSignupData","email","password","loginData","setLoginData","message","setMessage","alert","handleSignup","userCredential","user","uid","createdAt","Date","emailVerified","interval","setInterval","reload","clearInterval","merge","error","code","handleLogin","userDoc","exists","data","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Sparsh Chaurasiya/OneDrive/Desktop/react/student-ai-preparation/fontend/src/components/Login.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { auth,db } from \"../firebase\";\r\n// import { doc, setDoc,getDoc } from \"firebase/firestore\";\r\n// import \"../Loginstyle.css\"\r\n// import VantaBackgroundWrapper from \"../VantaBackgroundWrapper\";\r\n// import {\r\n//   createUserWithEmailAndPassword,\r\n//   signInWithEmailAndPassword,\r\n//   sendEmailVerification,\r\n//   signOut\r\n// } from \"firebase/auth\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n \r\n// import GoogleLogin from \"./GoogleLogin\";\r\n// import GithubLogin from \"./GithubLogin\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\n// const Login=()=> {\r\n//   const navigate = useNavigate();\r\n//   const [isLogin, setIsLogin] = useState(false);\r\n//   const [signupData, setSignupData] = useState({ email: \"\", password: \"\" });\r\n// const [loginData, setLoginData] = useState({ email: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState(\"\");\r\n// useEffect(() => {\r\n//   if (message) {\r\n//     alert(message);\r\n//     setMessage(\"\"); \r\n//   }\r\n// }, [message]);\r\n  \r\n\r\n//   const handleSignup = async () => {\r\n//     if (!signupData.email || !signupData.password) {\r\n//     setMessage(\" Email and password are required for signup.\");\r\n//     return;\r\n//   }\r\n//     try {\r\n//       const userCredential=await createUserWithEmailAndPassword(auth, signupData.email, signupData.password);\r\n//       const user = userCredential.user;\r\n//       await sendEmailVerification(user);\r\n\r\n      \r\n// setMessage(\"Verify your Email\");\r\n   \r\n    \r\n// if (user.emailVerified) {\r\n//   alert(\"✅ Email verified. You can now log in.\");\r\n// } else {\r\n//   alert(\"❌ Email not verified yet. Please check your inbox.\");\r\n//   await signOut(auth);\r\n// }\r\n    \r\n   \r\n//     } catch (error) {\r\n//       if (error.code === \"auth/email-already-in-use\") {\r\n//       setMessage(\" Email already in use. Please login instead.\");\r\n//     } else {\r\n//       setMessage(` ${error.message}`);\r\n//     }\r\n//     }\r\n//   };\r\n// useEffect(() => {\r\n//   console.log(\"Current path:\", window.location.pathname);\r\n// }, [navigate]);\r\n//   const handleLogin = async () => {\r\n//   if (!loginData.email || !loginData.password) {\r\n//     setMessage(\"Email and password are required for login.\");\r\n//     return;\r\n//   }\r\n\r\n//   try {\r\n//     const userCredential = await signInWithEmailAndPassword(\r\n//       auth,\r\n//       loginData.email,\r\n//       loginData.password\r\n//     );\r\n//     const user = userCredential.user;\r\n//     const userRef = doc(db, \"users\", user.uid);\r\n//     const userSnap = await getDoc(userRef);\r\n//   if(userSnap.exists()){\r\n//      setMessage(\"✅ Login successful!\");\r\n//       navigate(\"/home\");\r\n//   }\r\n    \r\n\r\n    \r\n//       if (!user.emailVerified) {\r\n//         setMessage(\"📧 Please verify your email first. A new link has been sent.\");\r\n//         await sendEmailVerification(user);\r\n        \r\n        \r\n//         await signOut(auth);\r\n//         return;\r\n//       }\r\n\r\n//       if(user.emailVerified){\r\n//       if (!userSnap.exists()) {\r\n//       await setDoc(userRef, {\r\n//         email: user.email,\r\n//         createdAt: new Date()\r\n//       });\r\n//     }}\r\n\r\n//       setMessage(\"✅ Login successful!\");\r\n//       navigate(\"/home\");\r\n//     }\r\n//    catch (error) {\r\n//     if (error.code === \"auth/user-not-found\") {\r\n//     setMessage(\"❌ No user found with this email. Please sign up.\");\r\n//   } else if (error.code === \"auth/wrong-password\") {\r\n//     setMessage(\"❌ Incorrect password. Please try again.\");\r\n//   } else {\r\n//     setMessage(`❌ ${error.message}`);\r\n//   }\r\n//   }\r\n// };\r\n// useEffect(() => {\r\n//   const testFirestore = async () => {\r\n//     try {\r\n//       await setDoc(doc(db, \"test\", \"test\"), { test: true });\r\n//       console.log(\"Firestore is working!\");\r\n//     } catch (error) {\r\n//       console.error(\"Firestore error:\", error);\r\n//     }\r\n//   };\r\n//   testFirestore();\r\n// }, []);\r\n\r\n//   return (\r\n    \r\n//     <div className=\"form-structor\">\r\n      \r\n//       <div className={`signup ${isLogin ? \"slide-up\" : \"\"}`}>\r\n//         <h2 className=\"form-title\" onClick={() => setIsLogin(false)}>\r\n//           <span>or</span>Sign up\r\n//         </h2>\r\n//         <div className=\"form-holder\">\r\n          \r\n//           <input\r\n//             type=\"email\"\r\n//             className=\"input\"\r\n//             placeholder=\"Email\"\r\n//             name=\"email\"\r\n//             value={signupData.email}\r\n//             onChange={(e) => setSignupData({ ...signupData, email: e.target.value })}\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             className=\"input\"\r\n//             placeholder=\"Password\"\r\n//             name=\"password\"\r\n//             value={signupData.password}\r\n//             onChange={(e) => setSignupData({ ...signupData, password: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <button className=\"submit-btn\" onClick={handleSignup}>\r\n//           Sign up\r\n//         </button>\r\n//       </div>\r\n\r\n      \r\n//       <div className={`login ${isLogin ? \"\" : \"slide-up\"}`}>\r\n//         <div className=\"center\">\r\n//           <h2 className=\"form-title\" onClick={() => setIsLogin(true)}>\r\n//             <span>or</span>Log in\r\n//           </h2>\r\n          \r\n//           <div className=\"form-holder\">\r\n//             <div className=\"d-flex justify-content-center align-items-center mt-2\">\r\n//   <div>\r\n//     <GoogleLogin />\r\n//     <GithubLogin />\r\n//   </div>\r\n// </div>\r\n//             <div className=\"d-flex justify-content-center\">\r\n//   <h4>or</h4>\r\n// </div>\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"input\"\r\n//               placeholder=\"Email\"\r\n//               name=\"email\"\r\n//               value={loginData.email}\r\n//               onChange={(e) => setLoginData({ ...loginData, email: e.target.value })}\r\n//             />\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"input\"\r\n//               placeholder=\"Password\"\r\n//               name=\"password\"\r\n//               value={loginData.password}\r\n//                onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\r\n//             />\r\n//           </div>\r\n//           <button className=\"submit-btn text-white \" onClick={handleLogin}>\r\n//             Log in\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n     \r\n     \r\n//     </div>\r\n//   );\r\n// }\r\n// export default Login;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\nimport \"../Loginstyle.css\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  signOut\r\n} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [isLogin, setIsLogin] = useState(true); // Default to login tab\r\n  const [signupData, setSignupData] = useState({ email: \"\", password: \"\" });\r\n  const [loginData, setLoginData] = useState({ email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      alert(message);\r\n      setMessage(\"\");\r\n    }\r\n  }, [message]);\r\n\r\n  const handleSignup = async () => {\r\n    if (!signupData.email || !signupData.password) {\r\n      setMessage(\"Email and password are required for signup.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create user\r\n      const userCredential = await createUserWithEmailAndPassword(\r\n        auth,\r\n        signupData.email,\r\n        signupData.password\r\n      );\r\n      const user = userCredential.user;\r\n\r\n      // Send verification email\r\n      await sendEmailVerification(user);\r\n      setMessage(\"Verification email sent. Please check your inbox.\");\r\n\r\n      // Store basic user data immediately (before verification)\r\n      await setDoc(doc(db, \"users\", user.uid), {\r\n        email: user.email,\r\n        createdAt: new Date(),\r\n        emailVerified: false // Track verification status\r\n      });\r\n\r\n      // Sign out and wait for verification\r\n      await signOut(auth);\r\n\r\n      // Check verification status periodically\r\n      const interval = setInterval(async () => {\r\n        await user.reload();\r\n        if (user.emailVerified) {\r\n          clearInterval(interval);\r\n          \r\n          // Update verification status in Firestore\r\n          await setDoc(doc(db, \"users\", user.uid), {\r\n            emailVerified: true\r\n          }, { merge: true });\r\n\r\n          alert(\"Email verified! Please login.\");\r\n          setIsLogin(true);\r\n        }\r\n      }, 5000);\r\n\r\n      return () => clearInterval(interval);\r\n\r\n    } catch (error) {\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        setMessage(\"Email already registered. Please login instead.\");\r\n        setIsLogin(true);\r\n      } else {\r\n        setMessage(`Signup error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!loginData.email || !loginData.password) {\r\n      setMessage(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Authenticate user\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        loginData.email,\r\n        loginData.password\r\n      );\r\n      const user = userCredential.user;\r\n\r\n      // Check Firestore for user record\r\n      const userDoc = await getDoc(doc(db, \"users\", user.uid));\r\n\r\n      if (!userDoc.exists()) {\r\n        // User doesn't exist in Firestore (legacy account)\r\n        await setDoc(doc(db, \"users\", user.uid), {\r\n          email: user.email,\r\n          createdAt: new Date(),\r\n          emailVerified: user.emailVerified\r\n        });\r\n      }\r\n\r\n      // For existing Firestore users, skip verification check\r\n      if (userDoc.exists() && userDoc.data().emailVerified) {\r\n        navigate(\"/home\");\r\n        return;\r\n      }\r\n\r\n      // For new accounts or unverified users\r\n      if (!user.emailVerified) {\r\n        await sendEmailVerification(user);\r\n        setMessage(\"Please verify your email first. New link sent.\");\r\n        await signOut(auth);\r\n        return;\r\n      }\r\n\r\n      // If verified but not in Firestore (shouldn't happen)\r\n      navigate(\"/home\");\r\n\r\n    } catch (error) {\r\n      if (error.code === \"auth/user-not-found\") {\r\n        setMessage(\"Account not found. Please sign up.\");\r\n        setIsLogin(false);\r\n      } else if (error.code === \"auth/wrong-password\") {\r\n        setMessage(\"Incorrect password.\");\r\n      } else {\r\n        setMessage(`Login error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-structor\">\r\n      {/* Signup Form */}\r\n      <div className={`signup ${isLogin ? \"slide-up\" : \"\"}`}>\r\n        <h2 className=\"form-title\" onClick={() => setIsLogin(false)}>\r\n          <span>or</span>Sign up\r\n        </h2>\r\n        <div className=\"form-holder\">\r\n          <input\r\n            type=\"email\"\r\n            className=\"input\"\r\n            placeholder=\"Email\"\r\n            value={signupData.email}\r\n            onChange={(e) => setSignupData({...signupData, email: e.target.value})}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            value={signupData.password}\r\n            onChange={(e) => setSignupData({...signupData, password: e.target.value})}\r\n          />\r\n        </div>\r\n        <button className=\"submit-btn\" onClick={handleSignup}>\r\n          Sign up\r\n        </button>\r\n      </div>\r\n\r\n      {/* Login Form */}\r\n      <div className={`login ${isLogin ? \"\" : \"slide-up\"}`}>\r\n        <div className=\"center\">\r\n          <h2 className=\"form-title\" onClick={() => setIsLogin(true)}>\r\n            <span>or</span>Log in\r\n          </h2>\r\n          <div className=\"form-holder\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              placeholder=\"Email\"\r\n              value={loginData.email}\r\n              onChange={(e) => setLoginData({...loginData, email: e.target.value})}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              placeholder=\"Password\"\r\n              value={loginData.password}\r\n              onChange={(e) => setLoginData({...loginData, password: e.target.value})}\r\n            />\r\n          </div>\r\n          <button className=\"submit-btn\" onClick={handleLogin}>\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AACtC,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AACxD,OAAO,mBAAmB;AAC1B,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,qBAAqB,EACrBC,OAAO,QACF,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAM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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}